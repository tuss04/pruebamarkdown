{
    "swagger":"2.0",
    "info":{
        "version":"2024.02.16",
        "title":"Simphony Transaction Services Gen2 API Guide",
        "description":"<p>The Simphony Transaction Services Gen2 (STS Gen2) API is a cloud offering that is provisioned by Oracle and available for use with new deployments of the Simphony Cloud Service.</p>\n<p>STS Gen2 provides a RESTful interface for transaction processing and complementary services that will be available both in the cloud as well as within the location. The exposed APIs are stateless and highly scalable, supporting large multi-tenanted Oracle Food and Beverage Cloud environments.</p>\n<p>The Organizations API provides the ability to get information about the following subject areas:\n<ul>\n<li>Organizations (as well as search for locations within an organization)</li>\n<li>Locations</li>\n<li>Revenue Centers</li>\n</ul>\n</p>\n<p>The Configuration API provides the ability to get information about the following subject areas using the organizational related details acquired from the Organizations API:\n<ul>\n<li>Tables</li>\n<li>Menu (menu items, condiments, condiment rules, pricing...)</li>\n<li>Discounts</li>\n<li>Service Charges</li>\n<li>Tenders</li>\n<li>Taxes</li>\n<li>Menu Item Availability</li>\n<li>Menu Items Barcode</li>\n</ul>\n</p>\n<p>The Checks API provides the ability to calculate, create and manage checks within a revenue center using the details acquired from the Organizations and Configuration APIs. The exposed endpoints fall into the following subject areas:\n<ul>\n<li>Calculations</li>\n<li>Check Operations</li>\n</ul>\n</p>\n<p>The Employee API provides the ability to get information about the following subject areas within a property:\n<ul>\n<li>Employee</li>\n</ul>\n</p>\n<p>Notifications API provides the ability to manage call back POST notifications messages that are sent to the integrator when they register to receive a notification for following events:\n<ul>\n<li>Organization</li>\n<li>Configuration</li>\n<li>Check</li>\n<li>Employee</li>\n</ul>\n</p>",
        "license":{
            "name":"Oracle License",
            "url":"https://www.oracle.org/legal/terms.html"
        },
        "x-summary":"The Simphony Transaction Services Gen2 (STS Gen2) API is a cloud offering that is provisioned by Oracle and available for use with new deployments of the Simphony Cloud Service."
    },
    "consumes":[
        "application/json"
    ],
    "produces":[
        "application/json"
    ],
    "schemes":[
        "https"
    ],
    "externalDocs":{
        "description":"Learn more about the Simphony Transaction Services Platform",
        "url":"https://docs.oracle.com/en/industries/food-beverage/pos.html"
    },
    "tags":[
        {
            "name":"Checks API",
            "description":"The STS Gen2 Checks API is used to create and manage the checks within a revenue center (use the Organization Service to locate a revenue center). Configuration content (for example, menu items or discounts) from the Configuration API is used to populate a check.\n <h3>Paths</h3><p>The {basePath} for resources on the Checks API is:<p>https://{host/path}/api/v1/</p><p>The Checks API provides access to the get and modify checks in a revenue center. The context of the operation is defined by the {orgShortName}, {locRef}, and {rvcRef} parameters. In many cases the operations are executed by routing request to on-premises services. This has an increased latency over requests that are processed by cloud-base services.</p><p>Check operations that include a check in the request, get the value of the {orgShortName}, {locRef}, and {rvcRef} from the request body via the check header. Check operations that do not include check in the requests, specify these values in the header.</p>\n"
        },
        {
            "name":"Checks API/Connection Status",
            "description":"The STS Gen2 Connection Status API is used to retrieve the connection status for a specified revenue center.\n<h3>Paths</h3><p>The {basePath} for resources on the Connection Status API is:</p><p>https://{host/path}/api/v1/</p><p>API to indicate status of check processing for a revenue center.</p><p>This request checks to see if STS has a connection for this property. The value of the connection status now does not represent a guarantee that the connection status will be the same at any point in the future.</p>"
        },
        {
            "name":"Configuration API",
            "description":"The STS Gen2 Configuration Service is used to interact with POS system configuration including tables, menus, discounts, service charges, and tenders. Items are configured for each revenue center. Available revenue centers can be obtained from the Organization Service.\n<h3>Paths</h3><p>The {basePath} for resources on the Configuration API is:<p>https://{host/path}/api/v1/</p><p>The Configuration API provides access to the menu, discount, service charge, and tender resources configured for a revenue center.</p><p>Because each revenue center is uniquely identified by a combination of the {orgShortName}, {locRef}, and {rvcRef} then the path to each of the resources includes these values.</p>"
        },
        {
            "name":"Employees API",
            "description":"The STS Gen2 Employees API is used to interact with an employee within a property (use the Organization Service to locate a property).\n<h3>Paths</h3>The {basePath} for resources on the Employees API is:<p>https://{host/path}/api/v1/</p><p>The Employees API provides access to the get an employee in a property. The context of the operation is defined by the {orgShortName} and {locRef} parameters.</p>\n"
        },
        {
            "name":"Notifications API",
            "description":"The STS Gen2 Notifications Service is used to manage call back POST notifications messages that are sent to the integrator when they register to receive organization, configuration, check, and employee events.<p>Integrators must expose a service endpoint which accepts HTTP POST requests (webhook) to receive notifications from the STS Gen2 Notifications Service. The endpoint must implement TLS 1.2 and listen on port 443.The following top-level domains .com, .net, .org, .edu, .ca, .io, .site, .se, .sa are supported.</p><br>The following notifications are supported for STS Gen2 cloud integrations:<br>- Organizations Notification<br>- Configuration Notification<br>- Check Notification<br>- Employees Notification\n<p><br>The following notifications are supported for STS Gen2 on-premises integrations:<br>- Check Notification</p>\n\n<h3>Example notification message</h3><pre class=\"pre\">{\n        \"messages\": [\n            {\n                \"id\": \"8253c2a5-5b3c-497d-a87f-f8bb2e250ba7\",\n                \"creationDate\": \"2021-08-13T15:40:43.511Z\",\n                \"messageType\": {\n                    \"id\": \"CheckNotification\"\n                },\n                \"resource\": {\n                    \"orgShortName\": \"tfoinc\",\n                    \"locRef\": \"fdmnh144\",\n                    \"rvcRef\": \"42\",\n                    \"checkRef\": \"929aacee2c6d42c78ae877e824c28eed00000431\"\n                },\n                \"data\": {\n                    \"status\": \"Submitted\",\n                    \"timeStampUtc\": \"2021-08-13T15:40:44.501Z\"\n                }\n            }\n        ]\n    }\n </pre><h3>Retry logic</h3><p>At present retries are not supported. A notification will be sent only once.</p>\n<h3>Paths</h3><p>The {basePath} for resources on the Notifications API is:</p> <p>https://{host}/api/v1/</p>"
        },
        {
            "name":"Notifications API/Webhook",
            "description":"<p>STS Gen2 includes resource level notifications that it facilitates via webhooks.</p><p>Integrators must expose a service endpoint which accepts HTTP POST requests (webhook) to receive notifications from the STS Gen2 Notifications Service. The endpoint must implement TLS 1.2 and listen on port 443. The following top-level domains .com, .net, .org, .edu, .ca, .io, .site, .se, .sa are supported. Timeout for HTTP requests to subscribers is 15 seconds with no retry</p><br>The following notifications are supported for STS Gen2 cloud integrations:<br>- Organizations Notification<br>- Configuration Notification<br>- Check Notification<br>- Employees Notification\n<p><br>The following notifications are supported for STS Gen2 on-premises integrations:<br>- Check Notification</p>\n\n"
        },
        {
            "name":"Organization API",
            "description":"The STS Gen2 Organization API is used to interact with organizations, locations, and revenue centers within the organization. It also provides a search capability to support the ability to find locations in an organization or revenue centers within a single location based on geographic location.<h3>Paths</h3><p>The {basePath} for resources on the Organization API is:</p> <p>https://{host}/api/v1/</p> <p>The Organization API provides access to organizations, locations, and revenue center resources.</p> <p>An organization has one or more locations, and each location has one more revenue centers. The identifier for an organization in the API is orgShortName, the identifier for a location in the API is locRef, and the identifier for a revenue center in the API is rvcRef. The identifiers for locations are not unique across all organizations and similarly the identifiers for revenue centers are not unique across all locations within an organization. Since there is no uniqueness the path to access each of the resources must include its parent resource. For this reason, we end up with the following paths to GET each resource.</p>\n"
        }
    ],
    "paths":{
        "webhook":{
            "post":{
                "tags":[
                    "Notifications API/Webhook"
                ],
                "summary":"Post Webhook",
                "description":"<p>{IntegratorProvidedURL}</p><p>STS Gen2 includes resource level notifications that it facilitates via webhooks.</p><p>Integrators must expose a service endpoint which accepts HTTP POST requests (webhook) to receive notifications from the STS Gen2 Notifications Service. The endpoint must implement TLS 1.2 and listen on port 443. The following top-level domains .com, .net, .org, .edu, .ca, .io, .site, .se, .sa are supported. Timeout for HTTP requests to subscribers is 15 seconds with no retry</p><p>HTTP POST requests from the STS Gen2 Notifications Service include Digest and Key-Id headers to allow the message to be verified.</p><div class=\"section\">    <h3 class=\"title sectiontitle\">Example notification message</h3><p class=\"p\">The following example shows the contents of the notification message body in JSON format:</p>      <pre class=\"pre\">{\n        \"messages\": [\n            {\n                \"id\": \"8253c2a5-5b3c-497d-a87f-f8bb2e250ba7\",\n                \"creationDate\": \"2021-08-13T15:40:43.511Z\",\n                \"messageType\": {\n                    \"id\": \"CheckNotification\"\n                },\n                \"resource\": {\n                    \"orgShortName\": \"tfoinc\",\n                    \"locRef\": \"fdmnh144\",\n                    \"rvcRef\": \"42\",\n                    \"checkRef\": \"929aacee2c6d42c78ae877e824c28eed00000431\"\n                },\n                \"data\": {\n                    \"status\": \"Submitted\",\n                    \"timeStampUtc\": \"2021-08-13T15:40:44.501Z\"\n                }\n            }\n        ]\n    }\n </pre></div><h3>Retry logic</h3><p>At present retries are not supported. A notification will be sent only once.</p></div>\n",
                "operationId":"PostWebhook",
                "parameters":[
                    {
                        "name":"Digest",
                        "in":"header",
                        "description":"Digest HMACSHA256 using key provided by Integrator at time of registration/subscription. The value of digest is Base64 encoded HMACSHA256 hash of the ASCII-encoded request message body. The Base64 decoded subscriber's Key is used as the hash key.\n",
                        "required":true,
                        "type":"string"
                    },
                    {
                        "name":"Key-Id",
                        "in":"header",
                        "description":"Key ID that was used to sign the digest.\n",
                        "required":true,
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"A successful 200-299 response status code with an empty response body acknowledging receipt of the webhook event.\n"
                    }
                },
                "x-internal-id":"ebhook-post",
                "x-filename-id":"ebhook-post"
            }
        },
        "{basePath}/checks/calculator":{
            "post":{
                "tags":[
                    "Checks API"
                ],
                "summary":"Post calculate totals for a check",
                "description":"<p>The API used to calculated totals on a check.</p><p>The orgShortName, locRef, and rvcRef in the check header are used to define the context of the operation.</p>",
                "operationId":"calculateCheck",
                "parameters":[
                    {
                        "$ref":"#/parameters/header.OrgShortName.Required"
                    },
                    {
                        "$ref":"#/parameters/header.LocRef.Required"
                    },
                    {
                        "$ref":"#/parameters/header.RvcRef.Required"
                    },
                    {
                        "$ref":"#/parameters/header.Accept-Language"
                    },
                    {
                        "$ref":"#/parameters/body.Check"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"A check with its calculated totals.",
                        "schema":{
                            "$ref":"#/definitions/Check"
                        }
                    },
                    "400":{
                        "$ref":"#/responses/CheckBadRequest"
                    },
                    "521":{
                        "$ref":"#/responses/ServiceTimeout"
                    }
                },
                "x-internal-id":"basePath}-checks-calculator-post",
                "x-filename-id":"basepath-checks-calculator-post"
            }
        },
        "{basePath}/checks":{
            "post":{
                "tags":[
                    "Checks API"
                ],
                "summary":"Post a new check",
                "description":"<p>API to create a new check.</p><p>The orgShortName, locRef, and rvcRef values in the check header are used to define the location and revenue center where the operation will occur.</p>",
                "operationId":"createCheck",
                "parameters":[
                    {
                        "$ref":"#/parameters/header.OrgShortName.Required"
                    },
                    {
                        "$ref":"#/parameters/header.LocRef.Required"
                    },
                    {
                        "$ref":"#/parameters/header.RvcRef.Required"
                    },
                    {
                        "$ref":"#/parameters/header.Accept-Language"
                    },
                    {
                        "$ref":"#/parameters/body.Check"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"A check that was created. The checkRef is the check identifier.",
                        "schema":{
                            "$ref":"#/definitions/Check"
                        }
                    },
                    "400":{
                        "$ref":"#/responses/CheckBadRequest"
                    },
                    "521":{
                        "$ref":"#/responses/ServiceTimeout"
                    }
                },
                "x-internal-id":"basePath}-checks-post",
                "x-filename-id":"basepath-checks-post"
            },
            "get":{
                "tags":[
                    "Checks API"
                ],
                "summary":"Get a list of checks",
                "description":"<p>{basePath}/checks?checkEmployeeRef=65&sinceTime=2020-12-31T23:59Z</p><p> {basePath}/checks?orderTypeRef=2&includeClosed=true</p><p>{basePath}/checks?checkNum=976&sinceTime=2020-12-31T23:59Z&includeClosed=true</p><p>API returns the available open checks from the specified revenue center. Options to return all checks meeting a specified set of criteria is supported via query parameters. The details in these responses can then be used to retrieve the details of a specific check.</p>",
                "operationId":"getChecks",
                "parameters":[
                    {
                        "$ref":"#/parameters/header.OrgShortName.Required"
                    },
                    {
                        "$ref":"#/parameters/header.LocRef.Required"
                    },
                    {
                        "$ref":"#/parameters/header.RvcRef.Required"
                    },
                    {
                        "name":"checkNumbers",
                        "description":"Only checks with these numbers are returned. It is possible to get more than one check with the same check number.\n",
                        "in":"query",
                        "type":"array",
                        "items":{
                            "type":"integer"
                        }
                    },
                    {
                        "name":"checkEmployeeRef",
                        "description":"The reference number of the employee that owns the check. Allows returning of checks for only a targeted employee.\n",
                        "in":"query",
                        "type":"integer",
                        "required":false
                    },
                    {
                        "name":"orderTypeRef",
                        "description":"Only checks of this order type are included in the results.\n",
                        "in":"query",
                        "type":"integer"
                    },
                    {
                        "name":"sinceTime",
                        "description":"Only checks created on or after this time are returned in the result. Date time is UTC.\n",
                        "in":"query",
                        "type":"string",
                        "format":"time",
                        "required":false
                    },
                    {
                        "name":"includeClosed",
                        "description":"When true, both open and closed checks are included in the results, otherwise only closed checks are included. If not included as a query parameter will be assumed to be false.\n",
                        "in":"query",
                        "type":"boolean"
                    },
                    {
                        "name":"tableName",
                        "description":"A table reference to filter by the table number or table name. tableName attribute can reflect either a single table number or a table name (in both cases represented by a string data type in the api). RVC option bit 18 is responsible for deciding if the value reflected in the tableName is utilized by the POS as the table name or the table number.\n",
                        "in":"query",
                        "type":"string"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"A collection of check headers",
                        "schema":{
                            "type":"object",
                            "properties":{
                                "items":{
                                    "description":"Array of Check Header JSON objects. If there are no checks that meet the criteria of the request this array will be empty.",
                                    "type":"array",
                                    "items":{
                                        "$ref":"#/definitions/CheckHeader"
                                    }
                                }
                            }
                        }
                    },
                    "400":{
                        "$ref":"#/responses/CheckBadRequest"
                    },
                    "404":{
                        "$ref":"#/responses/NotFound"
                    },
                    "521":{
                        "$ref":"#/responses/ServiceTimeout"
                    }
                },
                "x-internal-id":"basePath}-checks-get",
                "x-filename-id":"basepath-checks-get"
            }
        },
        "{basePath}/checks/{checkRef}":{
            "get":{
                "tags":[
                    "Checks API"
                ],
                "summary":"Get a check",
                "description":"<p>{basePath}/checks/929aacee2c6d42c78ae877e824c28eed00000431</p><p>API returns the requested check from the specified revenue center using the checkRef which can be found in the check status response once a check has been created at the POS or by using one of the other known query parameters with the GET Checks endpoint to retrieve the checkRef.</p>",
                "operationId":"getCheck",
                "parameters":[
                    {
                        "$ref":"#/parameters/header.OrgShortName.Required"
                    },
                    {
                        "$ref":"#/parameters/header.LocRef.Required"
                    },
                    {
                        "$ref":"#/parameters/header.RvcRef.Required"
                    },
                    {
                        "$ref":"#/parameters/header.Accept-Language"
                    },
                    {
                        "$ref":"#/parameters/path.CheckRef"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"The current state of the check.",
                        "schema":{
                            "$ref":"#/definitions/Check"
                        }
                    },
                    "400":{
                        "$ref":"#/responses/CheckBadRequest"
                    },
                    "404":{
                        "$ref":"#/responses/NotFound"
                    },
                    "521":{
                        "$ref":"#/responses/ServiceTimeout"
                    }
                },
                "x-internal-id":"basePath}-checks-{checkRef}-get",
                "x-filename-id":"basepath-checks-checkref-get"
            },
            "delete":{
                "tags":[
                    "Checks API"
                ],
                "summary":"Delete a check",
                "description":"<p>{basePath}/checks/929aacee2c6d42c78ae877e824c28eed00000431</p><p>API cancels the requested check from the specified revenue center if present and in a state where cancelation is allowed.</p><p>Request uses the checkRef that can be found in the check header once a check has been created at the POS.</p>",
                "operationId":"voidCheck",
                "parameters":[
                    {
                        "$ref":"#/parameters/header.OrgShortName.Required"
                    },
                    {
                        "$ref":"#/parameters/header.LocRef.Required"
                    },
                    {
                        "$ref":"#/parameters/header.RvcRef.Required"
                    },
                    {
                        "$ref":"#/parameters/path.CheckRef"
                    }
                ],
                "responses":{
                    "204":{
                        "description":"The check has been successfully voided."
                    },
                    "400":{
                        "$ref":"#/responses/CheckBadRequest"
                    },
                    "404":{
                        "$ref":"#/responses/NotFound"
                    },
                    "521":{
                        "$ref":"#/responses/ServiceTimeout"
                    }
                },
                "x-internal-id":"basePath}-checks-{checkRef}-delete",
                "x-filename-id":"basepath-checks-checkref-delete"
            }
        },
        "{basePath}/checks/{checkRef}/round":{
            "post":{
                "tags":[
                    "Checks API"
                ],
                "summary":"Post a new round to a check",
                "description":"<p>{basePath}/checks/929aacee2c6d42c78ae877e824c28eed00000431/round</p><p>API adds a round to an existing check. If for some reason the update can't be made to the check due to the check's state at the POS, an appropriate HTTP response and response code will be returned. This operation does not alter items already on the check from previous rounds.</p><p>The orgShortName, locRef and rvcRef values in the Check Header are used to define the context of the operation.</p>",
                "operationId":"addRound",
                "parameters":[
                    {
                        "$ref":"#/parameters/header.OrgShortName.Required"
                    },
                    {
                        "$ref":"#/parameters/header.LocRef.Required"
                    },
                    {
                        "$ref":"#/parameters/header.RvcRef.Required"
                    },
                    {
                        "$ref":"#/parameters/header.Accept-Language"
                    },
                    {
                        "$ref":"#/parameters/path.CheckRef"
                    },
                    {
                        "$ref":"#/parameters/body.Check"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"The complete check with additional items added.",
                        "schema":{
                            "$ref":"#/definitions/Check"
                        }
                    },
                    "400":{
                        "$ref":"#/responses/CheckBadRequest"
                    },
                    "521":{
                        "$ref":"#/responses/ServiceTimeout"
                    }
                },
                "x-internal-id":"basePath}-checks-{checkRef}-round-post",
                "x-filename-id":"basepath-checks-checkref-round-post"
            }
        },
        "{basePath}/checks/{checkRef}/printed":{
            "get":{
                "tags":[
                    "Checks API"
                ],
                "summary":"Get printed check",
                "description":"<p>{basePath}/checks/929aacee2c6d42c78ae877e824c28eed00000431/printed</p><p>API returns an array of strings containing text suitable for printing on a 40-column printer.</p>",
                "operationId":"getCheckPrinted",
                "parameters":[
                    {
                        "$ref":"#/parameters/header.OrgShortName.Required"
                    },
                    {
                        "$ref":"#/parameters/header.LocRef.Required"
                    },
                    {
                        "$ref":"#/parameters/header.RvcRef.Required"
                    },
                    {
                        "$ref":"#/parameters/header.Accept-Language"
                    },
                    {
                        "$ref":"#/parameters/path.CheckRef"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"An array of lines representing the printed output.",
                        "schema":{
                            "$ref":"#/definitions/CheckPrintedLinesItem"
                        }
                    },
                    "400":{
                        "$ref":"#/responses/CheckBadRequest"
                    },
                    "404":{
                        "$ref":"#/responses/NotFound"
                    },
                    "521":{
                        "$ref":"#/responses/ServiceTimeout"
                    }
                },
                "x-internal-id":"basePath}-checks-{checkRef}-printed-get",
                "x-filename-id":"basepath-checks-checkref-printed-get"
            }
        },
        "{basePath}/checks/connectionStatus":{
            "head":{
                "tags":[
                    "Checks API/Connection Status"
                ],
                "summary":"Head connection status",
                "description":"<p>API to indicate the state of the connection for a specific revenue center for servicing requests from the STS Gen2 cloud endpoints. The value returned is the last known state of the connection at the time of the request and could change at any time.</p>",
                "operationId":"getConnectionStatus",
                "parameters":[
                    {
                        "$ref":"#/parameters/header.OrgShortName.Required"
                    },
                    {
                        "$ref":"#/parameters/header.LocRef.Required"
                    },
                    {
                        "$ref":"#/parameters/header.RvcRef.Required"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Indicates if the location is currently connected.",
                        "headers":{
                            "Simphony-POS-Connected":{
                                "description":"Indicate whether connection to POS exists for this revenue center.",
                                "type":"boolean"
                            }
                        }
                    },
                    "400":{
                        "$ref":"#/responses/CheckBadRequest"
                    }
                },
                "x-internal-id":"basePath}-checks-connectionStatus-head",
                "x-filename-id":"basepath-checks-connectionstatus-head"
            }
        },
        "{basePath}/organizations":{
            "get":{
                "tags":[
                    "Organization API"
                ],
                "summary":"Get a list of organizations",
                "description":"<p>{basePath}/organizations?offset=1&limit=2</p>The API returns a list of organizations with which the integrator is privileged to interact.\n",
                "operationId":"getOrganizations",
                "parameters":[
                    {
                        "$ref":"#/parameters/query.paginationOffset"
                    },
                    {
                        "$ref":"#/parameters/query.paginationLimit"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/organizations"
                        }
                    },
                    "400":{
                        "$ref":"#/responses/OrganizationApiBadRequest"
                    },
                    "401":{
                        "$ref":"#/responses/Unauthorized"
                    },
                    "403":{
                        "$ref":"#/responses/Forbidden"
                    },
                    "404":{
                        "$ref":"#/responses/NotFound"
                    }
                },
                "x-internal-id":"basePath}-organizations-get",
                "x-filename-id":"basepath-organizations-get"
            }
        },
        "{basePath}/organizations/{orgShortName}":{
            "get":{
                "tags":[
                    "Organization API"
                ],
                "summary":"Get an organization by the specified identifier",
                "description":"<p>{basePath}/organizations/tfoinc</p>The API returns details about a specific organization.\n",
                "operationId":"getOrganization",
                "parameters":[
                    {
                        "$ref":"#/parameters/path.orgShortName"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/organizations{orgShortName}"
                        }
                    },
                    "400":{
                        "$ref":"#/responses/OrganizationApiBadRequest"
                    },
                    "401":{
                        "$ref":"#/responses/Unauthorized"
                    },
                    "403":{
                        "$ref":"#/responses/Forbidden"
                    },
                    "404":{
                        "$ref":"#/responses/NotFound"
                    }
                },
                "x-internal-id":"basePath}-organizations-{orgShortName}-get",
                "x-filename-id":"basepath-organizations-orgshortname-get"
            }
        },
        "{basePath}/organizations/{orgShortName}/locations":{
            "get":{
                "tags":[
                    "Organization API"
                ],
                "summary":"Get a list of all locations for an organization",
                "description":"<p>{basePath}/organizations/tfoinc/locations</p><p>{basePath}/organizations/tfoinc/locations?offset=0&limit=2</p>The API returns a list of locations with which the integrator is privileged to interact within an organization.\n",
                "operationId":"getLocationCollection",
                "parameters":[
                    {
                        "$ref":"#/parameters/path.orgShortName"
                    },
                    {
                        "$ref":"#/parameters/query.paginationOffset"
                    },
                    {
                        "$ref":"#/parameters/query.paginationLimit"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/organizations{orgShortName}locations"
                        }
                    },
                    "400":{
                        "$ref":"#/responses/OrganizationApiBadRequest"
                    },
                    "401":{
                        "$ref":"#/responses/Unauthorized"
                    },
                    "403":{
                        "$ref":"#/responses/Forbidden"
                    },
                    "404":{
                        "$ref":"#/responses/NotFound"
                    }
                },
                "x-internal-id":"basePath}-organizations-{orgShortName}-locations-get",
                "x-filename-id":"basepath-organizations-orgshortname-locations-get"
            }
        },
        "{basePath}/organizations/{orgShortName}/locations/{locRef}":{
            "get":{
                "tags":[
                    "Organization API"
                ],
                "summary":"Get a location by the specified identifier for an organization",
                "description":"<p>{basePath}/organizations/tfoinc/locations/fdmnh144</p>The API returns details about a specific location in an organization.\n",
                "operationId":"getLocation",
                "parameters":[
                    {
                        "$ref":"#/parameters/path.orgShortName"
                    },
                    {
                        "$ref":"#/parameters/path.locRef"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/Location"
                        }
                    },
                    "400":{
                        "$ref":"#/responses/OrganizationApiBadRequest"
                    },
                    "401":{
                        "$ref":"#/responses/Unauthorized"
                    },
                    "403":{
                        "$ref":"#/responses/Forbidden"
                    },
                    "404":{
                        "$ref":"#/responses/NotFound"
                    }
                },
                "x-internal-id":"basePath}-organizations-{orgShortName}-locations-{locRef}-get",
                "x-filename-id":"basepath-organizations-orgshortname-locations-locref-get"
            }
        },
        "{basePath}/organizations/{orgShortName}/locations/{locRef}/revenueCenters":{
            "get":{
                "tags":[
                    "Organization API"
                ],
                "summary":"Get a list of all revenue centers for a location",
                "description":"<p>{basePath}/organizations/tfoinc/locations/fdmnh144/revenueCenters</p><p>{basePath}/organizations/tfoinc/locations/fdmnh144/revenueCenters?offset=5&limit=2</p>The API returns a list of revenue centers the integrator is privileged to interact with in a location.\n",
                "operationId":"getRevenueCenterCollection",
                "parameters":[
                    {
                        "$ref":"#/parameters/path.orgShortName"
                    },
                    {
                        "$ref":"#/parameters/path.locRef"
                    },
                    {
                        "$ref":"#/parameters/query.paginationOffset"
                    },
                    {
                        "$ref":"#/parameters/query.paginationLimit"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/organizations{orgShortName}locations{locRef}revenueCenters"
                        }
                    },
                    "400":{
                        "$ref":"#/responses/OrganizationApiBadRequest"
                    },
                    "401":{
                        "$ref":"#/responses/Unauthorized"
                    },
                    "403":{
                        "$ref":"#/responses/Forbidden"
                    },
                    "404":{
                        "$ref":"#/responses/NotFound"
                    }
                },
                "x-internal-id":"basePath}-organizations-{orgShortName}-locations-{locRef}-revenueCenters-get",
                "x-filename-id":"basepath-organizations-orgshortname-locations-locref-revenuecenters-get"
            }
        },
        "{basePath}/organizations/{orgShortName}/locations/{locRef}/revenueCenters/{rvcRef}":{
            "get":{
                "tags":[
                    "Organization API"
                ],
                "summary":"Get a revenue center by the specified identifier for a location",
                "description":"<p>{basePath}/organizations/tfoinc/locations/fdmnh144/revenueCenters/42</p>The API returns details about a specific revenue center in a location.\n",
                "operationId":"getRevenueCenter",
                "parameters":[
                    {
                        "$ref":"#/parameters/path.orgShortName"
                    },
                    {
                        "$ref":"#/parameters/path.locRef"
                    },
                    {
                        "$ref":"#/parameters/path.RevenueCenterRef"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/RevenueCenter"
                        }
                    },
                    "400":{
                        "$ref":"#/responses/OrganizationApiBadRequest"
                    },
                    "401":{
                        "$ref":"#/responses/Unauthorized"
                    },
                    "403":{
                        "$ref":"#/responses/Forbidden"
                    },
                    "404":{
                        "$ref":"#/responses/NotFound"
                    }
                },
                "x-internal-id":"basePath}-organizations-{orgShortName}-locations-{locRef}-revenueCenters-{rvcRef}-get",
                "x-filename-id":"basepath-organizations-orgshortname-locations-locref-revenuecenters-rvcref-get"
            }
        },
        "{basePath}/search/locations":{
            "get":{
                "tags":[
                    "Organization API"
                ],
                "summary":"Get search for locations within an organization",
                "description":"<p>{basePath}/search/locations?orgShortName=tfoinc&latitude=40.763188&longitude=-73.914835&radius=50000&floor=1&count=2</p>The API returns a list of locations within an organization based on distance from the given geo-coordinate.<p> Supported only for STS Gen2 cloud integrations.</p>",
                "operationId":"searchLocation",
                "parameters":[
                    {
                        "$ref":"#/parameters/query.orgShortNameRef"
                    },
                    {
                        "$ref":"#/parameters/query.latitude"
                    },
                    {
                        "$ref":"#/parameters/query.longitude"
                    },
                    {
                        "$ref":"#/parameters/query.radius"
                    },
                    {
                        "$ref":"#/parameters/query.floor"
                    },
                    {
                        "$ref":"#/parameters/query.count"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/distanceLocation"
                        }
                    },
                    "400":{
                        "$ref":"#/responses/OrganizationApiBadRequest"
                    },
                    "401":{
                        "$ref":"#/responses/Unauthorized"
                    },
                    "403":{
                        "$ref":"#/responses/Forbidden"
                    },
                    "404":{
                        "$ref":"#/responses/NotFound"
                    }
                },
                "x-internal-id":"basePath}-search-locations-get",
                "x-filename-id":"basepath-search-locations-get"
            }
        },
        "{basePath}/search/revenueCenters":{
            "get":{
                "tags":[
                    "Organization API"
                ],
                "summary":"Get search for revenue centers within a location",
                "description":"<p>{basePath}/search/revenueCenters?orgShortName=tfoinc&locRef=fdmnh144&latitude=40.763188&longitude=-73.914835&radius=5000&count=2</p><p>{basePath}/search/revenueCenters?orgShortName=tfoinc&locRef=fdmnh144&floor=3</p><p>The API returns a list of revenue centers within a location based on distance from the point defined in the request and/or the floors provided in the \"floor\" query parameter.</p><p> Supported only for STS Gen2 cloud integrations.</p>",
                "operationId":"searchRevenueCenter",
                "parameters":[
                    {
                        "$ref":"#/parameters/query.orgShortNameRef"
                    },
                    {
                        "$ref":"#/parameters/query.locRef"
                    },
                    {
                        "$ref":"#/parameters/query.latitude"
                    },
                    {
                        "$ref":"#/parameters/query.longitude"
                    },
                    {
                        "$ref":"#/parameters/query.radius"
                    },
                    {
                        "$ref":"#/parameters/query.floor"
                    },
                    {
                        "$ref":"#/parameters/query.count"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"OK",
                        "schema":{
                            "$ref":"#/definitions/distanceRevenueCenter"
                        }
                    },
                    "400":{
                        "$ref":"#/responses/OrganizationApiBadRequest"
                    },
                    "401":{
                        "$ref":"#/responses/Unauthorized"
                    },
                    "403":{
                        "$ref":"#/responses/Forbidden"
                    },
                    "404":{
                        "$ref":"#/responses/NotFound"
                    }
                },
                "x-internal-id":"basePath}-search-revenueCenters-get",
                "x-filename-id":"basepath-search-revenuecenters-get"
            }
        },
        "{basePath}/employees":{
            "get":{
                "tags":[
                    "Employees API"
                ],
                "summary":"Get an employee number",
                "description":"<p>{basePath}/employees?OrgShortName=tfoinc&LocRef= fdmnh144&EmployeeId=5</p><p>API returns a specific employee.</p>",
                "operationId":"getEmployee",
                "parameters":[
                    {
                        "$ref":"#/parameters/query.OrgShortName.Required"
                    },
                    {
                        "$ref":"#/parameters/query.LocRef.Required"
                    },
                    {
                        "$ref":"#/parameters/query.EmployeeId.Required"
                    },
                    {
                        "$ref":"#/parameters/header.IfNoneMatch"
                    },
                    {
                        "$ref":"#/parameters/header.IfModifiedSince"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"The employee number.",
                        "headers":{
                            "ETag":{
                                "type":"string",
                                "description":"The current entity-tag for the selected representation. See RFC 7232 Section 2.3 (https://tools.ietf.org/html/rfc7232#section-2.3).\n"
                            },
                            "Last-Modified":{
                                "type":"string",
                                "description":"A timestamp indicating the date and time at which the origin server believes the selected representation was last modified. See RFC 7232 Section 2.2 (https://tools.ietf.org/html/rfc7232#section-2.2).\n"
                            }
                        },
                        "schema":{
                            "$ref":"#/definitions/EmployeeView"
                        }
                    },
                    "304":{
                        "$ref":"#/responses/NotModified"
                    },
                    "400":{
                        "$ref":"#/responses/EmployeesApiBadRequest"
                    },
                    "401":{
                        "$ref":"#/responses/Unauthorized"
                    },
                    "403":{
                        "$ref":"#/responses/Forbidden"
                    },
                    "404":{
                        "$ref":"#/responses/NotFound"
                    }
                },
                "x-internal-id":"basePath}-employees-get",
                "x-filename-id":"basepath-employees-get"
            }
        },
        "{basePath}/notifications/discovery":{
            "get":{
                "tags":[
                    "Notifications API"
                ],
                "summary":"Get message types",
                "description":"The API is used to get a list of all the available MessageType Types.\n",
                "operationId":"GetSubscriptionsDiscovery",
                "responses":{
                    "200":{
                        "description":"A list of MessageType types",
                        "schema":{
                            "type":"object",
                            "properties":{
                                "items":{
                                    "type":"array",
                                    "description":"Array of notification message types.",
                                    "items":{
                                        "$ref":"#/definitions/MessageType"
                                    }
                                }
                            }
                        }
                    },
                    "404":{
                        "$ref":"#/responses/NotFound"
                    }
                },
                "x-internal-id":"basePath}-notifications-discovery-get",
                "x-filename-id":"basepath-notifications-discovery-get"
            }
        },
        "{basePath}/notifications/registration":{
            "post":{
                "tags":[
                    "Notifications API"
                ],
                "summary":"Post creates an integrator registration",
                "description":"<p>The API is used to register a subscriber.</p><p>The API creates a subscription to a resource for the current subscriber. POST request is used only when registering and doesn't provide the ability to update a registration details. Therefore, the use of PUT request is preferred.</p>\n",
                "operationId":"CreateSubscriber",
                "parameters":[
                    {
                        "$ref":"#/parameters/body.SubscriberSecretView"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Creates an integrator"
                    },
                    "400":{
                        "description":"400 Bad Request\nAlso returned if integrator already exists.\n"
                    }
                },
                "x-internal-id":"basePath}-notifications-registration-post",
                "x-filename-id":"basepath-notifications-registration-post"
            },
            "put":{
                "tags":[
                    "Notifications API"
                ],
                "summary":"PUT creates or updates integrators registration",
                "description":"The API is used to register or update subscriber. Intended to be used when subscriber's keyId, hmacKey, or keyType update is required. Existing subscriptions will remain intact and any notifications that are sent related to the subscription will utilize the newly updated details.\n",
                "operationId":"PutSubscriber",
                "parameters":[
                    {
                        "$ref":"#/parameters/body.SubscriberSecretView"
                    }
                ],
                "responses":{
                    "201":{
                        "$ref":"#/responses/Created"
                    },
                    "204":{
                        "$ref":"#/responses/NoContent"
                    }
                },
                "x-internal-id":"basePath}-notifications-registration-put",
                "x-filename-id":"basepath-notifications-registration-put"
            },
            "delete":{
                "tags":[
                    "Notifications API"
                ],
                "summary":"Delete a subscriber",
                "description":"The API is used to delete a subscriber.",
                "operationId":"DeleteSubscriber",
                "responses":{
                    "204":{
                        "$ref":"#/responses/NoContent"
                    },
                    "404":{
                        "$ref":"#/responses/NotFound"
                    }
                },
                "x-internal-id":"basePath}-notifications-registration-delete",
                "x-filename-id":"basepath-notifications-registration-delete"
            }
        },
        "{basePath}/notifications/subscriptions":{
            "get":{
                "tags":[
                    "Notifications API"
                ],
                "summary":"Get subscriptions",
                "description":"The API is used to get the current set of subscriptions to a subscriber.\n",
                "operationId":"GetSubscriptions",
                "responses":{
                    "200":{
                        "description":"A collection of subscriptions",
                        "schema":{
                            "type":"object",
                            "properties":{
                                "items":{
                                    "type":"array",
                                    "description":"Array subscription items.",
                                    "items":{
                                        "$ref":"#/definitions/Subscription"
                                    }
                                }
                            }
                        }
                    },
                    "400":{
                        "$ref":"#/responses/NotificationsApiBadRequest"
                    },
                    "404":{
                        "$ref":"#/responses/NotFound"
                    }
                },
                "x-internal-id":"basePath}-notifications-subscriptions-get",
                "x-filename-id":"basepath-notifications-subscriptions-get"
            },
            "delete":{
                "tags":[
                    "Notifications API"
                ],
                "summary":"Delete subscriptions",
                "description":"The API is used to delete all the current set of subscriptions to a subscriber.\n",
                "operationId":"DeleteSubscriptions",
                "responses":{
                    "204":{
                        "$ref":"#/responses/NoContent"
                    },
                    "400":{
                        "$ref":"#/responses/NotificationsApiBadRequest"
                    },
                    "404":{
                        "$ref":"#/responses/NotFound"
                    }
                },
                "x-internal-id":"basePath}-notifications-subscriptions-delete",
                "x-filename-id":"basepath-notifications-subscriptions-delete"
            },
            "post":{
                "tags":[
                    "Notifications API"
                ],
                "summary":"Post create a subscription",
                "description":"The API creates a subscription to a resource for the current subscriber.\n",
                "operationId":"CreateSubscription",
                "parameters":[
                    {
                        "$ref":"#/parameters/body.SubscriptionViewModel"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"The subscription",
                        "schema":{
                            "$ref":"#/definitions/Subscription"
                        }
                    },
                    "400":{
                        "description":"400 Bad Request\nNote - A subscription for message type ID 'EmployeesNotification' will return 400 if RvcRef has a value. Such a subscription would never receive any notifications.\n",
                        "schema":{
                            "$ref":"#/responses/NotificationsApiBadRequest"
                        }
                    },
                    "403":{
                        "$ref":"#/responses/Forbidden"
                    },
                    "404":{
                        "$ref":"#/responses/NotFound"
                    }
                },
                "x-internal-id":"basePath}-notifications-subscriptions-post",
                "x-filename-id":"basepath-notifications-subscriptions-post"
            }
        },
        "{basePath}/notifications/subscriptions/{subscriptionId}":{
            "get":{
                "tags":[
                    "Notifications API"
                ],
                "summary":"Get the subscription by a subscriptionId",
                "description":"<p>{basePath}/notifications/subscriptions/055a5914-ca69-7776-b076-e036fdab486f</p>The API is used to get the subscriptions by a subscriptionId.\n",
                "operationId":"GetSubscriptionById",
                "parameters":[
                    {
                        "$ref":"#/parameters/path.SubscriptionId"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"A subscription",
                        "schema":{
                            "$ref":"#/definitions/Subscription"
                        }
                    },
                    "400":{
                        "$ref":"#/responses/NotificationsApiBadRequest"
                    },
                    "404":{
                        "$ref":"#/responses/NotFound"
                    }
                },
                "x-internal-id":"basePath}-notifications-subscriptions-{subscriptionId}-get",
                "x-filename-id":"basepath-notifications-subscriptions-subscriptionid-get"
            },
            "delete":{
                "tags":[
                    "Notifications API"
                ],
                "summary":"Delete the subscription by a subscriptionId",
                "description":"<p>{basePath}/notifications/subscriptions/055a5914-ca69-7776-b076-e036fdab486f</p>The API is used to delete subscriptions by a subscriptionId.\n",
                "operationId":"DeleteSubscriptionById",
                "parameters":[
                    {
                        "$ref":"#/parameters/path.SubscriptionId"
                    }
                ],
                "responses":{
                    "204":{
                        "$ref":"#/responses/NoContent"
                    },
                    "400":{
                        "$ref":"#/responses/NotificationsApiBadRequest"
                    },
                    "404":{
                        "$ref":"#/responses/NotFound"
                    }
                },
                "x-internal-id":"basePath}-notifications-subscriptions-{subscriptionId}-delete",
                "x-filename-id":"basepath-notifications-subscriptions-subscriptionid-delete"
            }
        },
        "{basePath}/menus/summary":{
            "get":{
                "tags":[
                    "Configuration API"
                ],
                "summary":"Get a summary of all available menus\n",
                "description":"<p>{basePath}/menus/summary?orgShortName=tfoinc&locRef= fdmnh144& rvcRef=42</p>API returns a list of menu summaries for a location or revenue center in an organization.\n",
                "operationId":"getMenuSummary",
                "parameters":[
                    {
                        "$ref":"#/parameters/query.OrgShortName.Required"
                    },
                    {
                        "$ref":"#/parameters/query.LocRef"
                    },
                    {
                        "$ref":"#/parameters/query.RvcRef"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"A collection of menu summary items.\n",
                        "schema":{
                            "type":"object",
                            "properties":{
                                "items":{
                                    "description":"Array of Menu Summary objects. If there are no menus configured that meet the query parameters, this array will be empty.\n",
                                    "type":"array",
                                    "items":{
                                        "$ref":"#/definitions/MenuSummary"
                                    }
                                }
                            }
                        }
                    }
                },
                "x-internal-id":"basePath}-menus-summary-get",
                "x-filename-id":"basepath-menus-summary-get"
            }
        },
        "{basePath}/menus/{menuId}":{
            "get":{
                "tags":[
                    "Configuration API"
                ],
                "summary":"Get a menu",
                "description":"<p>{basePath}/menus/1233</p>API returns menu. A menu describes the set of items that can be ordered from a revenue center. The menu includes the menu items, prices, and related information necessary to order an item.\n",
                "operationId":"getMenu",
                "parameters":[
                    {
                        "$ref":"#/parameters/header.OrgShortName.Required"
                    },
                    {
                        "$ref":"#/parameters/header.LocRef.Required"
                    },
                    {
                        "$ref":"#/parameters/header.RvcRef.Required"
                    },
                    {
                        "$ref":"#/parameters/path.MenuId"
                    },
                    {
                        "$ref":"#/parameters/header.IfModifiedSince"
                    },
                    {
                        "$ref":"#/parameters/header.IfNoneMatch"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"A Menu",
                        "headers":{
                            "Last-Modified":{
                                "type":"string",
                                "description":"A timestamp indicating the date and time at which the origin server believes the selected representation was last modified. See RFC 7232 Section 2.2\n"
                            },
                            "ETag":{
                                "type":"string",
                                "description":"The current entity-tag for the selected representation. See RFC 7232 Section 2.3\n"
                            }
                        },
                        "schema":{
                            "$ref":"#/definitions/Menu"
                        }
                    },
                    "304":{
                        "$ref":"#/responses/NotModified"
                    },
                    "400":{
                        "$ref":"#/responses/ConfigurationApiBadRequest"
                    },
                    "404":{
                        "$ref":"#/responses/NotFound"
                    }
                },
                "x-internal-id":"basePath}-menus-{menuId}-get",
                "x-filename-id":"basepath-menus-menuid-get"
            }
        },
        "{basePath}/barcodes/collection":{
            "get":{
                "tags":[
                    "Configuration API"
                ],
                "summary":"Get the barcode collection",
                "description":"<p>{basePath}/barcodes/collection?OrgShortName=tfoinc&LocRef=fdmnh144&RvcRef=42</p>Get barcodes configuration for menu item.<p> Supported only for STS Gen2 cloud integrations.</p>",
                "operationId":"getMenu",
                "parameters":[
                    {
                        "$ref":"#/parameters/query.OrgShortName.Required"
                    },
                    {
                        "$ref":"#/parameters/query.LocRef.Required"
                    },
                    {
                        "$ref":"#/parameters/query.RvcRef.Required"
                    },
                    {
                        "$ref":"#/parameters/header.IfModifiedSince"
                    },
                    {
                        "$ref":"#/parameters/header.IfNoneMatch"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"A collection of barcodes",
                        "headers":{
                            "Last-Modified":{
                                "type":"string",
                                "description":"A timestamp indicating the date and time at which the origin server believes the selected representation was last modified. See RFC 7232 Section 2.2\n"
                            },
                            "ETag":{
                                "type":"string",
                                "description":"The current entity-tag for the selected representation. See RFC 7232 Section 2.3\n"
                            }
                        },
                        "schema":{
                            "$ref":"#/definitions/BarcodeCollection"
                        }
                    },
                    "304":{
                        "$ref":"#/responses/NotModified"
                    },
                    "400":{
                        "$ref":"#/responses/ConfigurationApiBadRequest"
                    }
                },
                "x-internal-id":"basePath}-barcodes-collection-get",
                "x-filename-id":"basepath-barcodes-collection-get"
            }
        },
        "{basePath}/discounts/collection":{
            "get":{
                "tags":[
                    "Configuration API"
                ],
                "summary":"Get the discount collection",
                "description":"<p>{basePath}/discounts/collection?orgShortName=tfoinc&locRef=fdmnh144&rvcRef=42</p>The discount collection is a list of discounts that can be used when interacting with the checks endpoint. The API returns a collection of discounts that can be used at the specified revenue center.\n",
                "operationId":"getDiscountCollection",
                "parameters":[
                    {
                        "$ref":"#/parameters/query.OrgShortName.Required"
                    },
                    {
                        "$ref":"#/parameters/query.LocRef.Required"
                    },
                    {
                        "$ref":"#/parameters/query.RvcRef.Required"
                    },
                    {
                        "$ref":"#/parameters/header.IfModifiedSince"
                    },
                    {
                        "$ref":"#/parameters/header.IfNoneMatch"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"A collection of discounts",
                        "headers":{
                            "Last-Modified":{
                                "type":"string",
                                "description":"A timestamp indicating the date and time at which the origin server believes the selected representation was last modified. See RFC 7232 Section 2.2\n"
                            },
                            "ETag":{
                                "type":"string",
                                "description":"The current entity-tag for the selected representation. See RFC 7232 Section 2.3\n"
                            }
                        },
                        "schema":{
                            "$ref":"#/definitions/DiscountCollection"
                        }
                    },
                    "304":{
                        "$ref":"#/responses/NotModified"
                    },
                    "400":{
                        "$ref":"#/responses/ConfigurationApiBadRequest"
                    }
                },
                "x-internal-id":"basePath}-discounts-collection-get",
                "x-filename-id":"basepath-discounts-collection-get"
            }
        },
        "{basePath}/serviceCharges/collection":{
            "get":{
                "tags":[
                    "Configuration API"
                ],
                "summary":"Get the service charge collection",
                "description":"<p>{basePath}/serviceCharges/collection?orgShortName=tfoinc&locRef=fdmnh144&rvcRef=42</p>The service charge collection is a list of service charges that can be used when interacting with the checks endpoint. The API returns a collection of service charges that can be used at the specified revenue center.\n",
                "operationId":"getServiceChargeCollection",
                "parameters":[
                    {
                        "$ref":"#/parameters/query.OrgShortName.Required"
                    },
                    {
                        "$ref":"#/parameters/query.LocRef.Required"
                    },
                    {
                        "$ref":"#/parameters/query.RvcRef.Required"
                    },
                    {
                        "$ref":"#/parameters/header.IfModifiedSince"
                    },
                    {
                        "$ref":"#/parameters/header.IfNoneMatch"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"A collection of service charges",
                        "headers":{
                            "Last-Modified":{
                                "type":"string",
                                "description":"A timestamp indicating the date and time at which the origin server believes the selected representation was last modified. See RFC 7232 Section 2.2\n"
                            },
                            "ETag":{
                                "type":"string",
                                "description":"The current entity-tag for the selected representation. See RFC 7232 Section 2.3\n"
                            }
                        },
                        "schema":{
                            "$ref":"#/definitions/ServiceChargeCollection"
                        }
                    },
                    "304":{
                        "$ref":"#/responses/NotModified"
                    },
                    "400":{
                        "$ref":"#/responses/ConfigurationApiBadRequest"
                    },
                    "404":{
                        "$ref":"#/responses/NotFound"
                    }
                },
                "x-internal-id":"basePath}-serviceCharges-collection-get",
                "x-filename-id":"basepath-servicecharges-collection-get"
            }
        },
        "{basePath}/tenders/collection":{
            "get":{
                "tags":[
                    "Configuration API"
                ],
                "summary":"Get the tender collection",
                "description":"<p>{basePath}/tenders/collection?orgShortName=tfoinc&locRef=fdmnh144&rvcRef=42</p>The tender collection is a list of tenders that can be used for payment when interacting with the checks endpoint. The API returns a collection of tenders for the specified revenue center.\n",
                "operationId":"getTenderCollection",
                "parameters":[
                    {
                        "$ref":"#/parameters/query.OrgShortName.Required"
                    },
                    {
                        "$ref":"#/parameters/query.LocRef.Required"
                    },
                    {
                        "$ref":"#/parameters/query.RvcRef.Required"
                    },
                    {
                        "$ref":"#/parameters/header.IfModifiedSince"
                    },
                    {
                        "$ref":"#/parameters/header.IfNoneMatch"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"A collection of tenders",
                        "headers":{
                            "Last-Modified":{
                                "type":"string",
                                "description":"A timestamp indicating the date and time at which the origin server believes the selected representation was last modified. See RFC 7232 Section 2.2"
                            },
                            "ETag":{
                                "type":"string",
                                "description":"The current entity-tag for the selected representation. See RFC 7232 Section 2.3"
                            }
                        },
                        "schema":{
                            "$ref":"#/definitions/TenderCollection"
                        }
                    },
                    "304":{
                        "$ref":"#/responses/NotModified"
                    },
                    "400":{
                        "$ref":"#/responses/ConfigurationApiBadRequest"
                    }
                },
                "x-internal-id":"basePath}-tenders-collection-get",
                "x-filename-id":"basepath-tenders-collection-get"
            }
        },
        "{basePath}/taxes":{
            "get":{
                "tags":[
                    "Configuration API"
                ],
                "summary":"Get tax definitions",
                "description":"<p>{basePath}/taxes?orgShortName=tfoinc&locRef=fdmnh144&rvcRef=42</p>Get tax configuration for a revenue center. This request provides the tax class that is referenced by menu items and the tax rates and tax types referenced by the tax classes. The tax classes will indicate which tax rates are active when that tax class is used by an item.\n",
                "operationId":"getTaxes",
                "parameters":[
                    {
                        "$ref":"#/parameters/query.OrgShortName.Required"
                    },
                    {
                        "$ref":"#/parameters/query.LocRef.Required"
                    },
                    {
                        "$ref":"#/parameters/query.RvcRef.Required"
                    },
                    {
                        "$ref":"#/parameters/header.IfModifiedSince"
                    },
                    {
                        "$ref":"#/parameters/header.IfNoneMatch"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"Tax definitions",
                        "headers":{
                            "Last-Modified":{
                                "type":"string",
                                "description":"A timestamp indicating the date and time at which the origin server believes the selected representation was last modified. See RFC 7232 Section 2.2"
                            },
                            "ETag":{
                                "type":"string",
                                "description":"The current entity-tag for the selected representation. See RFC 7232 Section 2.3"
                            }
                        },
                        "schema":{
                            "$ref":"#/definitions/TaxDefinitions"
                        }
                    },
                    "304":{
                        "$ref":"#/responses/NotModified"
                    },
                    "400":{
                        "$ref":"#/responses/ConfigurationApiBadRequest"
                    }
                },
                "x-internal-id":"basePath}-taxes-get",
                "x-filename-id":"basepath-taxes-get"
            }
        },
        "{basePath}/menus/items/unavailable":{
            "get":{
                "tags":[
                    "Configuration API"
                ],
                "summary":"Get the collection of unavailable menu items",
                "description":"<p>items/unavailable?orgShortName=tfoinc&locRef= fdmnh144& rvcRef=42</p>Get a menu item availability status for menu items.\n",
                "operationId":"getMenuItemsUnavailable",
                "parameters":[
                    {
                        "$ref":"#/parameters/query.OrgShortName.Required"
                    },
                    {
                        "$ref":"#/parameters/query.LocRef.Required"
                    },
                    {
                        "$ref":"#/parameters/query.RvcRef.Required"
                    },
                    {
                        "$ref":"#/parameters/header.IfNoneMatch"
                    }
                ],
                "responses":{
                    "200":{
                        "description":"A collection of menu items that are currently unavailable",
                        "headers":{
                            "ETag":{
                                "type":"string",
                                "description":"The current entity-tag for the selected representation. See RFC 7232 Section 2.3"
                            }
                        },
                        "schema":{
                            "$ref":"#/definitions/MenuItemsUnavailable"
                        }
                    },
                    "304":{
                        "description":"304 Not Modified",
                        "headers":{
                            "ETag":{
                                "type":"string",
                                "description":"The current entity-tag for the selected representation. See RFC 7232 Section 2.3"
                            }
                        }
                    },
                    "400":{
                        "$ref":"#/responses/ConfigurationApiBadRequest"
                    }
                },
                "x-internal-id":"basePath}-menus-items-unavailable-get",
                "x-filename-id":"basepath-menus-items-unavailable-get"
            }
        }
    },
    "parameters":{
        "query.OrgShortName.Required":{
            "name":"orgShortName",
            "in":"query",
            "description":"The organization identifier.",
            "type":"string",
            "required":true
        },
        "query.LocRef.Required":{
            "name":"locRef",
            "in":"query",
            "description":"The location identifier.",
            "type":"string",
            "required":true
        },
        "query.RvcRef.Required":{
            "name":"rvcRef",
            "in":"query",
            "description":"The revenue center identifier.",
            "type":"integer",
            "required":true
        },
        "path.CheckRef":{
            "name":"checkRef",
            "in":"path",
            "description":"Check identifier",
            "type":"string",
            "required":true
        },
        "header.OrgShortName.Required":{
            "name":"Simphony-OrgShortName",
            "in":"header",
            "description":"The organization identifier.",
            "type":"string",
            "required":true
        },
        "header.LocRef.Required":{
            "name":"Simphony-LocRef",
            "in":"header",
            "description":"The location identifier.",
            "type":"string",
            "required":true
        },
        "header.RvcRef.Required":{
            "name":"Simphony-RvcRef",
            "in":"header",
            "description":"The revenue center identifier.",
            "type":"integer",
            "required":true
        },
        "header.Accept-Language":{
            "name":"Accept-Language",
            "in":"header",
            "description":"The Accept Language header identifies the language that is desired for the response.\n",
            "type":"string",
            "required":false
        },
        "header.Prefer.Check":{
            "name":"Prefer",
            "description":"The [Prefer](https://tools.ietf.org/html/rfc7240) headers is used to request what form the response should take.\n\n|Value                | Description\n|---------------------|------------\n|normal               |Returns the normal check, includes the header\n|includePrintedOutput |Returns normal check, plus 40-column formatted output with print headers and print trailers\n",
            "in":"header",
            "type":"array",
            "items":{
                "type":"string"
            },
            "default":"normal"
        },
        "body.Check":{
            "name":"check",
            "in":"body",
            "description":"The Check",
            "schema":{
                "$ref":"#/definitions/Check"
            },
            "required":true
        },
        "path.orgShortName":{
            "name":"orgShortName",
            "in":"path",
            "description":"Organization Identifier\n",
            "type":"string",
            "required":true
        },
        "path.locRef":{
            "name":"locRef",
            "in":"path",
            "description":"Location Identifier\n",
            "type":"string",
            "required":true
        },
        "path.RevenueCenterRef":{
            "name":"rvcRef",
            "in":"path",
            "description":"Revenue Center Identifier\n",
            "type":"integer",
            "required":true
        },
        "query.orgShortNameRef":{
            "name":"orgShortName",
            "in":"query",
            "description":"Organization Identifier\n",
            "type":"string",
            "required":true
        },
        "query.locRef":{
            "name":"locRef",
            "in":"query",
            "description":"Location Identifier\n",
            "type":"string",
            "required":true
        },
        "query.latitude":{
            "name":"latitude",
            "in":"query",
            "description":"WGS84 latitude, in degrees",
            "required":true,
            "type":"number",
            "minimum":-90,
            "exclusiveMinimum":false,
            "maximum":90,
            "exclusiveMaximum":false
        },
        "query.longitude":{
            "name":"longitude",
            "in":"query",
            "description":"WGS84 Longitude, in degrees",
            "required":true,
            "type":"number",
            "minimum":-180,
            "exclusiveMinimum":false,
            "maximum":180,
            "exclusiveMaximum":false
        },
        "query.radius":{
            "name":"radius",
            "in":"query",
            "description":"The search radius in meters",
            "required":false,
            "type":"number",
            "minimum":0,
            "exclusiveMinimum":false,
            "maximum":5000000,
            "exclusiveMaximum":false,
            "default":5000
        },
        "query.floor":{
            "name":"floor",
            "in":"query",
            "description":"address floor",
            "required":false,
            "type":"string",
            "default":""
        },
        "query.count":{
            "name":"count",
            "in":"query",
            "description":"Total number of items in the collection for all pages.",
            "required":true,
            "type":"number",
            "minimum":1,
            "exclusiveMinimum":false,
            "maximum":100,
            "exclusiveMaximum":false,
            "default":5
        },
        "query.paginationOffset":{
            "name":"offset",
            "in":"query",
            "description":"The offset of the start of the current page in the collection. If offset is not included in the request then all objects returned.\n",
            "required":false,
            "type":"integer",
            "minimum":0
        },
        "query.paginationLimit":{
            "name":"limit",
            "in":"query",
            "description":"The limit used for the current page.The maximum number of items to return in this request.\n",
            "required":false,
            "type":"integer",
            "minimum":0
        },
        "body.Organization":{
            "name":"organization",
            "in":"body",
            "description":"An Organization",
            "schema":{
                "$ref":"#/definitions/Organization"
            },
            "required":true
        },
        "body.Location":{
            "name":"location",
            "in":"body",
            "description":"A Location",
            "schema":{
                "$ref":"#/definitions/Location"
            },
            "required":true
        },
        "body.RevenueCenter":{
            "name":"revenueCenter",
            "in":"body",
            "description":"A Revenue Center",
            "schema":{
                "$ref":"#/definitions/RevenueCenter"
            },
            "required":true
        },
        "header.IfNoneMatch":{
            "name":"If-None-Match",
            "in":"header",
            "description":"If-None-Match HTTP header",
            "type":"string",
            "required":false
        },
        "header.IfModifiedSince":{
            "name":"If-Modified-Since",
            "in":"header",
            "description":"If-Modified-Since HTTP header",
            "type":"string",
            "required":false
        },
        "path.OrgShortName":{
            "name":"OrgShortName",
            "in":"path",
            "description":"The organization identifier. Will be forced to lower-case.",
            "type":"string",
            "required":true
        },
        "path.LocRef":{
            "name":"LocRef",
            "in":"path",
            "description":"The location identifier. Will be forced to lower-case.",
            "type":"string",
            "required":true
        },
        "query.EmployeeId.Required":{
            "name":"EmployeeId",
            "in":"query",
            "description":"Employee ID number.",
            "type":"integer",
            "format":"int64",
            "required":true
        },
        "path.SubscriptionId":{
            "name":"subscriptionId",
            "in":"path",
            "description":"Subscription Identifier\n",
            "type":"string",
            "required":true
        },
        "body.SubscriberSecretView":{
            "name":"subscriberSecretView",
            "in":"body",
            "description":"The SubscriberSecretView",
            "schema":{
                "$ref":"#/definitions/SubscriberSecretView"
            },
            "required":true
        },
        "body.SubscriptionViewModel":{
            "name":"subscriptionViewModel",
            "in":"body",
            "description":"The subscriptionViewModel",
            "schema":{
                "$ref":"#/definitions/SubscriptionViewModel"
            },
            "required":true
        },
        "path.MenuId":{
            "name":"menuId",
            "in":"path",
            "description":"The identifier for an individual menu.\n",
            "type":"string",
            "required":true
        },
        "path.DiscountCollectionId":{
            "name":"discountCollectionId",
            "in":"path",
            "description":"Discount Collection Identifier",
            "type":"string",
            "required":true
        },
        "path.ServiceChargeCollectionId":{
            "name":"serviceChargeCollectionId",
            "in":"path",
            "description":"Service Charge Collection Identifier",
            "type":"string",
            "required":true
        },
        "path.TenderCollectionId":{
            "name":"tenderCollectionId",
            "in":"path",
            "description":"Tender Collection Identifier",
            "type":"string",
            "required":true
        },
        "query.LocRef":{
            "name":"LocRef",
            "in":"query",
            "description":"The location identifier.\n",
            "type":"string"
        },
        "query.RvcRef":{
            "name":"RvcRef",
            "in":"query",
            "description":"The revenue center identifier.\n",
            "type":"string"
        },
        "body.Menu":{
            "name":"menu",
            "in":"body",
            "description":"A Menu",
            "schema":{
                "$ref":"#/definitions/Menu"
            },
            "required":true
        }
    },
    "definitions":{
        "Check":{
            "description":"The model for a Check.",
            "type":"object",
            "required":[
                "header"
            ],
            "properties":{
                "header":{
                    "$ref":"#/definitions/CheckHeader"
                },
                "notificationOptions":{
                    "$ref":"#/definitions/CheckNotificationOptions"
                },
                "checkNotifications":{
                    "type":"array",
                    "description":"Array of past notifications for the check.",
                    "items":{
                        "$ref":"#/definitions/CheckNotification"
                    }
                },
                "menuItems":{
                    "type":"array",
                    "description":"Array of menu items.",
                    "items":{
                        "$ref":"#/definitions/CheckMenuItem"
                    }
                },
                "comboMeals":{
                    "type":"array",
                    "description":"Array of combo meal items. If there were no combo meal items on the check the returned array will be empty.",
                    "items":{
                        "$ref":"#/definitions/CheckComboMealItem"
                    }
                },
                "discounts":{
                    "type":"array",
                    "description":"Array of discounts.",
                    "items":{
                        "$ref":"#/definitions/CheckDiscountItem"
                    }
                },
                "serviceCharges":{
                    "type":"array",
                    "description":"Array of service charges.",
                    "items":{
                        "$ref":"#/definitions/CheckServiceChargeItem"
                    }
                },
                "extensions":{
                    "type":"array",
                    "description":"Array of extension detail.",
                    "items":{
                        "$ref":"#/definitions/ExtensionItem"
                    }
                },
                "taxes":{
                    "type":"array",
                    "description":"Array of tax item.",
                    "items":{
                        "$ref":"#/definitions/CheckTaxItem"
                    }
                },
                "tenders":{
                    "type":"array",
                    "description":"Array of tender items.",
                    "items":{
                        "$ref":"#/definitions/CheckTenderItem"
                    }
                },
                "totals":{
                    "type":"object",
                    "description":"The check totals.",
                    "$ref":"#/definitions/CheckTotals"
                }
            }
        },
        "CheckNotificationOptions":{
            "description":"<p>Integrator-provided options for notifications.\n Following NotificationOptions are available \"Inline\" and \"Subscription\".</p> <p>Inline notifications options are used when Integrator is not registered and subscribed for notifications.</p><p>Subscription notification options are used when Integrator is registered and subscribed for notifications.</p><p>Check notifications are available for STS Cloud and STS Local (on-premises).</p>\n",
            "type":"object",
            "required":[
                "enabled"
            ],
            "properties":{
                "enabled":{
                    "description":"A flag indicating whether notifications should be sent for the check.\n Set to true to request notifications.\n NotificationOptions \"Inline\" and \"Subscription\"\n",
                    "type":"boolean"
                },
                "url":{
                    "description":"Integrator-provided web-hook callback URL. Must be able to accept POST requests. Is required if 'enabled' is set to 'true' and per-check notifications are needed.\n Must use port 443.\n NotificationOptions \"Inline\"\n",
                    "type":"string",
                    "example":"https://your_web_hook_url:443/"
                },
                "keyId":{
                    "description":"Integrator-provided id for key.\n Is required if 'enabled' is set to 'true' and per-check notifications are needed.\n NotificationOptions \"Inline\"\n",
                    "type":"string"
                },
                "key":{
                    "description":"Integrator-provided HMAC SHA-256 key, with length 64 bytes. Base64 encoded string. Is required if 'enabled' is set to 'true' and per-check notifications are needed.\n NotificationOptions \"Inline\"\n",
                    "type":"string",
                    "format":"string"
                }
            }
        },
        "CheckNotification":{
            "description":"A notifiable event that occurred on this check. Read-only; incoming values will be ignored.",
            "type":"object",
            "required":[
                "id",
                "creationDate",
                "messageType",
                "resource",
                "data"
            ],
            "properties":{
                "id":{
                    "description":"Message identifier.",
                    "type":"string"
                },
                "creationDate":{
                    "description":"Message created date and time.",
                    "type":"string"
                },
                "messageType":{
                    "$ref":"#/definitions/CheckMessageType"
                },
                "resource":{
                    "$ref":"#/definitions/CheckNotificationResource"
                },
                "data":{
                    "description":"The notification data.",
                    "type":"object",
                    "$ref":"#/definitions/CheckNotificationMessagesData"
                }
            }
        },
        "CheckMessageType":{
            "description":"Information about the type of message.",
            "type":"object",
            "required":[
                "id"
            ],
            "properties":{
                "id":{
                    "description":"Identifier of the message type.",
                    "type":"string",
                    "example":{
                        "id":"CheckNotification"
                    }
                }
            }
        },
        "CheckNotificationResource":{
            "description":"Information about the STS resource affected by this message.",
            "type":"object",
            "properties":{
                "orgShortName":{
                    "description":"The organization identifier.",
                    "type":"string"
                },
                "locRef":{
                    "description":"The location identifier. (If present depending on the hierarchy level requested in subscription.)",
                    "type":"string"
                },
                "rvcRef":{
                    "description":"The revenue center identifier.(If present depending on the hierarchy level requested in subscription.)",
                    "type":"string"
                },
                "checkRef":{
                    "description":"The unique check reference generated by the POS system when the check is created.",
                    "type":"string"
                }
            }
        },
        "CheckNotificationMessagesData":{
            "description":"The notification data.",
            "type":"object",
            "example":{
                "status":"Packaged",
                "timeStampUtc":"2021-12-08T19:57:12.045Z"
            },
            "properties":{
                "status":{
                    "description":"Information about the preparation status of the check.\n Status options:\n <br><table><tr><th>Status</th><th>Description</th></tr><tr><td>Uninitialized</td><td>indicates that the check was not fired. In use when pickupTime and fireTime is utilized in the request. Also returned when check status is \"closed\".</td></tr><tr><td>Submitted</td><td>indicates that the check preparation started.</td></tr><tr><td>Prepared</td><td>indicates that the check preparation was done. And moved \"bumped\" to the next stage.</td></tr><tr><td>Packaged</td><td>indicates that the check expedition was done.</td></tr></table>\n Expected for message Type: \"CheckNotification\". It is required to have the Kitchen Display System (KDS) configured to utilize the Check status notifications.\n",
                    "type":"string"
                },
                "timeStampUtc":{
                    "description":"A timestamp indicating the date and time in UTC at which check status changed.Expected for message Type: \"CheckNotification\"\n",
                    "type":"string"
                }
            }
        },
        "CheckHeader":{
            "description":"The check header contains information describing the overall check.\n",
            "type":"object",
            "properties":{
                "orgShortName":{
                    "description":"The organization identifier.\n",
                    "type":"string"
                },
                "locRef":{
                    "description":"The location identifier.\n",
                    "type":"string"
                },
                "rvcRef":{
                    "description":"The revenue center identifier.\n",
                    "type":"integer"
                },
                "checkRef":{
                    "description":"The unique check reference generated by the POS system when the check is created.\n",
                    "type":"string"
                },
                "idempotencyId":{
                    "description":"A unique identifier for the request generated by the integrator. This should be a UUID v4 formatted value minus dashes.\n",
                    "type":"string",
                    "pattern":"[0-9a-f]{32}"
                },
                "checkNumber":{
                    "description":"A check identifier generated by the POS when the check is created.\n",
                    "type":"integer"
                },
                "checkName":{
                    "description":"The reference for the check provided at time of check creation. This must be unique among all open checks at the revenue center.\n",
                    "type":"string"
                },
                "checkEmployeeRef":{
                    "description":"The identifier of the employee that is used for the operations.Simphony: the employee object number.\n",
                    "type":"integer"
                },
                "orderTypeRef":{
                    "description":"The order type identifier from the revenue center configuration.\n",
                    "type":"integer"
                },
                "tableName":{
                    "description":"The table for the check from the revenue center configuration.tableName attribute can reflect either a single table number or a table name (in both cases represented by a string data type in the api). RVC option bit 18 is responsible for deciding if the value reflected in the tableName is utilized by the POS as the table name or the table number.\n",
                    "type":"string"
                },
                "tableGroupNumber":{
                    "description":"The table-group of the check. Assigned by POS and indicates the number of checks open checks with the same table.\n",
                    "type":"integer"
                },
                "openTime":{
                    "description":"The time the check is opened/created. Time is UTC.\n",
                    "type":"string",
                    "format":"date-time"
                },
                "fireTime":{
                    "description":"The time requested for the order to \"fire\" to the kitchen. This is when preparation will start. If not provided, the current time is assumed. The dateTime in requests should be reflected in the Location/RVCs localized time, while responses will be shown in Zulu/UTC+0.\n",
                    "type":"string",
                    "format":"date-time"
                },
                "pickupTime":{
                    "description":"The time requested for the order to be collected. If not provided the current time plus the Service Level Time for the given order type is assumed. Time is local in the request but UTC in the response.\n",
                    "type":"string",
                    "format":"date-time"
                },
                "guestCount":{
                    "description":"The number of guests on the check.\n",
                    "type":"integer"
                },
                "language":{
                    "description":"The language culture reference associated with the check. This value is used to return \"name\" property of check items in a desired language.\n",
                    "type":"string"
                },
                "isTrainingCheck":{
                    "description":"Flag used to identify a training check.\n",
                    "type":"boolean"
                },
                "informationLines":{
                    "description":"An array of strings containing text that may appear on the guest check. Consult the POS administrator to determine what is supported by their configuration.\n",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "paymentStoreId":{
                    "description":"An identifier of a payment store provided by the point of sale.\n",
                    "type":"string"
                },
                "status":{
                    "description":"Information about the status of the check.\n Status options:\n<tr><td>open</td<td>indicates the check has a balance due and is 'open' (meaning it can be modified).</td></tr><tr><td>closed</td><td>indicates the check has been paid in full and is 'closed' (meaning it cannot be modified).</td></tr>\n",
                    "type":"string",
                    "enum":[
                        "open",
                        "closed"
                    ]
                }
            },
            "required":[
                "orgShortName",
                "locRef",
                "rvcRef",
                "idempotencyId",
                "checkEmployeeRef",
                "orderTypeRef"
            ]
        },
        "CheckMenuItem":{
            "description":"A menu item on the check represents an item that is purchased.\n",
            "type":"object",
            "required":[
                "menuItemId"
            ],
            "properties":{
                "menuItemId":{
                    "description":"The menu item's POS identifier.\n",
                    "type":"integer"
                },
                "definitionSequence":{
                    "description":"The menu item definition sequence identifier. Indicates the definition of item that is used. This value is ignored on Oracle.RES platform.\n",
                    "type":"integer"
                },
                "name":{
                    "description":"The name of the menu item defined in the POS.\n",
                    "type":"string"
                },
                "quantity":{
                    "description":"The quantity of this menu item. If present minimum value is 1.\n",
                    "type":"number"
                },
                "unitPrice":{
                    "description":"The price associated with the item.\n",
                    "type":"number",
                    "x-nullable":true
                },
                "priceSequence":{
                    "description":"The price sequence number to set the appropriate price level.\n",
                    "type":"integer"
                },
                "total":{
                    "description":"The total cost of the item (extended to account for the quantity).",
                    "type":"number"
                },
                "seat":{
                    "description":"Seat number of item on the check.",
                    "type":"integer"
                },
                "referenceText":{
                    "description":"Additional text associated with the item.",
                    "type":"string",
                    "maxLength":20
                },
                "surcharge":{
                    "description":"The calculated surcharge amount based on the rate configured for the surcharge associated with the item.",
                    "type":"number"
                },
                "itemDiscounts":{
                    "description":"Array of discounts applied to the menu item.",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/CheckDiscountItem"
                    }
                },
                "condiments":{
                    "description":"Array of condiments represented in menu item JSON objects. If there are no condiments configured, this array will be empty.",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/CheckCondimentItem"
                    }
                },
                "extensions":{
                    "description":"Array of extension detail.",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ExtensionItem"
                    }
                }
            }
        },
        "CheckCondimentItem":{
            "description":"",
            "type":"object",
            "required":[
                "condimentId",
                "definitionSequence"
            ],
            "properties":{
                "condimentId":{
                    "description":"The menu item's POS identifier.",
                    "type":"integer"
                },
                "definitionSequence":{
                    "description":"The menu item definition sequence identifier. Indicates the definition of item that is used. This value is ignored on Oracle.RES platform.",
                    "type":"integer"
                },
                "name":{
                    "description":"The name of the menu item defined in the POS.",
                    "type":"string"
                },
                "quantity":{
                    "description":"The quantity of this item. If present minimum value is 1.",
                    "type":"number"
                },
                "unitPrice":{
                    "description":"The price that should be used for the item.",
                    "type":"number"
                },
                "priceSequence":{
                    "description":"The price sequence number to set the appropriate price level.",
                    "type":"integer"
                },
                "total":{
                    "description":"Amount of item for the specified quantity.",
                    "type":"number"
                },
                "seat":{
                    "description":"Seat number of item on the check.",
                    "type":"integer"
                },
                "referenceText":{
                    "description":"Additional text associated with the item.  ",
                    "type":"string"
                },
                "surcharge":{
                    "description":"Surcharge amount.",
                    "type":"number"
                },
                "itemDiscounts":{
                    "description":"Array of discounts applied to the menu item.",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/CheckDiscountItem"
                    }
                }
            }
        },
        "CheckComboMealItem":{
            "description":"A Combo Meal that can be ordered.",
            "type":"object",
            "required":[
                "comboMealId",
                "comboItem",
                "mainItem",
                "sideItems"
            ],
            "properties":{
                "comboMealId":{
                    "description":"Combo meal object number.",
                    "type":"integer"
                },
                "seat":{
                    "description":"Seat assignment for the item.",
                    "type":"integer"
                },
                "comboItem":{
                    "description":"Combo meal menu item (for example, Burger Combo).",
                    "type":"Object",
                    "$ref":"#/definitions/CheckMenuItem"
                },
                "mainItem":{
                    "description":"Combo meal main item (for example, Hamburger).",
                    "type":"Object",
                    "$ref":"#/definitions/CheckMenuItem"
                },
                "sideItems":{
                    "description":"Combo meal side items (for example, French Fries or Coke).",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/CheckMenuItem"
                    }
                },
                "extensions":{
                    "description":"Array of extension detail",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ExtensionItem"
                    }
                }
            }
        },
        "CheckDiscountItem":{
            "description":"Definition of a discount that can be applied to a transaction.",
            "type":"object",
            "required":[
                "discountId"
            ],
            "properties":{
                "discountId":{
                    "description":"The discount identifier.",
                    "type":"integer"
                },
                "name":{
                    "description":"The name of the discount defined in the POS.",
                    "type":"string"
                },
                "seat":{
                    "description":"Seat number of item on the check.",
                    "type":"integer"
                },
                "referenceText":{
                    "description":"Additional text associated with the discount.",
                    "type":"string"
                },
                "total":{
                    "description":"The value of the discount for the associated line number. In the request, if the discount is an open discount then set value to \nthe amount (1.25) or percentage (0.1250 for 12.5%) that should be applied. For preset discounts\nthe total property in the request is ignored. In the response, the total is the amount by which \nthe transaction is discounted.\n",
                    "type":"number"
                },
                "isAutomatic":{
                    "description":"Flag to indicate the item was applied by automatically by the POS system.",
                    "type":"boolean"
                },
                "extensions":{
                    "description":"Array of extension detail.",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ExtensionItem"
                    }
                }
            }
        },
        "CheckServiceChargeItem":{
            "description":"A service charge that can be applied to a transaction.",
            "type":"object",
            "required":[
                "serviceChargeId"
            ],
            "properties":{
                "serviceChargeId":{
                    "description":"The service charge's object number reference.",
                    "type":"integer"
                },
                "name":{
                    "description":"The name of the service charge.",
                    "type":"string"
                },
                "total":{
                    "description":"The value of the service charge. In the request, if the service charge is an _open_ then set value to \nthe amount (1.25) or percentage (0.1250 for 12.5%) that should be applied. For preset a service charge\nthe total property in the request is ignored. In the response, the total is the amount of the service\ncharge applied to the check.\n",
                    "type":"number"
                },
                "seat":{
                    "description":"Seat number of item on the check.",
                    "type":"integer"
                },
                "referenceText":{
                    "description":"Additional text associated with the service charge.",
                    "type":"string"
                },
                "extensions":{
                    "description":"Array of extension detail.",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ExtensionItem"
                    }
                }
            }
        },
        "ExtensionItem":{
            "description":"Object that can contain extensibility detail to be stored with the check.",
            "type":"object",
            "properties":{
                "displayName":{
                    "description":"A string displayed and/or printed if this item is displayed or printed.",
                    "type":"string"
                },
                "appName":{
                    "description":"The name of the application associated with this data (defined by the caller).",
                    "type":"string"
                },
                "dataName":{
                    "description":"Name of the data stored by this extensibility item.",
                    "type":"string"
                },
                "dataType":{
                    "description":"Describes the type of data stored by this extensibility item (defined by the caller).",
                    "type":"string"
                },
                "data":{
                    "description":"The data payload for the extensibility data.",
                    "type":"string"
                },
                "options":{
                    "description":"Array of options that define behavior of the extension item.\n<br><table><tr><th>Option</th><th>Description</th></tr><tr><td>printOnDisplay</td><td>When specified the displayName is shown on the display</td></tr><tr><td>printOnReceipt</td><td>When specified the displayName is printed on the receipt/check</td></tr><tr><td>printInKitchen</td><td>When specified the displayName is printed on the kitchen chit</td></tr><tr><td>includeInApiResponse</td><td>When specified the extension item is return as part of the check in the API responses.</td></tr></table>\n",
                    "example":[
                        "printondisplay",
                        "printonreceipt",
                        "printInKitchen",
                        "IncludeInApiResponse"
                    ],
                    "type":"array",
                    "items":{
                        "type":"string",
                        "description":"Array of options. One or more of the following values are allowed: \"printOnDisplay\", \"printOnReceipt\", \"printInKitchen\", \"includeInApiResponse\"\n"
                    }
                }
            }
        },
        "CheckTaxItem":{
            "description":"Array of tax item. If there were no taxable items on the check the returned array will be empty.",
            "required":[
                "taxRateId"
            ],
            "type":"object",
            "properties":{
                "taxRateId":{
                    "description":"The tax rate identifier.",
                    "type":"string"
                },
                "name":{
                    "description":"The name of the tax.",
                    "type":"string"
                },
                "total":{
                    "description":"The total of the tax at for this rate.",
                    "type":"number"
                }
            }
        },
        "CheckTenderItem":{
            "description":"",
            "type":"object",
            "required":[
                "tenderId"
            ],
            "properties":{
                "tenderId":{
                    "description":"Tender identifier.r",
                    "type":"integer"
                },
                "name":{
                    "description":"The name of the tender defined in the POS.",
                    "type":"string"
                },
                "total":{
                    "description":"The total of the tender item. A value of zero will result payment for the full amount.",
                    "type":"number"
                },
                "chargedTipTotal":{
                    "description":"The amount of charged tip to apply to the transaction. This amount is the portion of the payment that represents the charged tip. The chargedTipTotal field will not have an impact on a check if the \"total\" field is not specified.",
                    "type":"number"
                },
                "referenceText":{
                    "description":"Additional text associated with the tender.",
                    "type":"string"
                },
                "paymentData":{
                    "$ref":"#/definitions/CheckPaymentData"
                },
                "extensions":{
                    "description":"Array of extension detail.",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ExtensionItem"
                    }
                }
            }
        },
        "CheckPaymentData":{
            "description":"You can access Oracle Payment Interface documentation through the following Oracle Hospitality documentation page: https://docs.oracle.com/en/industries/hospitality/integration_platforms.html \n",
            "type":"object",
            "required":[
                "type",
                "data"
            ],
            "properties":{
                "type":{
                    "description":"Describes the type of data contained in this payment data object.Type structure identifier, format identifier values can be found at link provided in the description.",
                    "type":"string"
                },
                "data":{
                    "description":"Object containing data for the type of payment.",
                    "type":"object"
                }
            }
        },
        "CheckTotals":{
            "description":"Contains a set of totals for aspects of the check. The values from the check total object relate in the following way: <br>subtotal (sum of menu items sales - discounts)\n <br>- discountTotal <br>+ autoServiceChargeTotal <br>+ serviceChargeTotal <br>+ taxTotal <br>- paymentTotal <br>= totalDue\n",
            "type":"object",
            "properties":{
                "subtotal":{
                    "description":"The subtotal of the check. This is the sum of net menu item totals. The net menu item total for a single menu item is (menu item total + item discounts + surcharge).\n",
                    "type":"number"
                },
                "subtotalDiscountTotal":{
                    "description":"The total of discounts applied to the subtotal.\n",
                    "type":"number"
                },
                "autoServiceChargeTotal":{
                    "description":"The total of service charges automatically added to the check.\n",
                    "type":"number"
                },
                "serviceChargeTotal":{
                    "description":"The service charge total of the check.\n",
                    "type":"number"
                },
                "taxTotal":{
                    "description":"The tax total of the check. This value excludes any inclusive tax.\n",
                    "type":"number"
                },
                "paymentTotal":{
                    "description":"The total of the payments on the check.\n",
                    "type":"number"
                },
                "totalDue":{
                    "description":"The remaining balance due for the check.\n",
                    "type":"number"
                }
            }
        },
        "CheckPrintedLinesItem":{
            "description":"Response contains an items object..",
            "type":"object",
            "required":[
                "items"
            ],
            "properties":{
                "items":{
                    "description":"Response contains an Array of Strings formatted for printing.\n",
                    "type":"array",
                    "example":[
                        "12 STS                            Page 2",
                        "----------------------------------------",
                        "CHK 75                           TBL 2/1",
                        "               11/3/2020                ",
                        "----------------------------------------",
                        "       DineIn                           ",
                        " 1 Carrot Soup               10.00      ",
                        " 1 Beetroot Roll             120.00     ",
                        "   *SPECIAL REQUESTS*                   ",
                        "   Please include extra sauce on side   ",
                        " 1 Potato Tower              10.00      ",
                        "   STS Open $ SC              1.23      ",
                        " 1 Potato Tower              10.00      ",
                        "   CashAuto                $151.23      ",
                        "   Subtotal                $150.00      ",
                        "   Other                     $1.23      ",
                        "   Payment                 $151.23      ",
                        "   Change Due                $0.00      ",
                        "  ----------- Check Closed -----------  ",
                        "           11/3/2020 5:02 PM            "
                    ]
                }
            }
        },
        "ChecksApiProblemDetails":{
            "description":"Problem details is used as standard model for reporting details when HTTP error status code is returned. This definition is defined by [RFC7807](https://tools.ietf.org/html/rfc7807). \n\n  **Extensions**\n  * posDetails\n",
            "type":"object",
            "example":{
                "type":"error:validation",
                "title":"Check is invalid.",
                "details":"The Check provided is not valid.",
                "instance":"error:check_validation_failure",
                "posDetails":[
                    {
                        "code":"menu_item_invalid",
                        "message":"invalid 'definitionSequence' value for menuItem '123'"
                    }
                ]
            },
            "properties":{
                "type":{
                    "description":"A URI reference that identifies the problem type. When this member is not present, its value is assumed to be \"about:blank\".",
                    "type":"string",
                    "example":"error:validation"
                },
                "title":{
                    "description":"A short, human-readable summary of the problem type.",
                    "type":"string",
                    "example":"Check is invalid."
                },
                "details":{
                    "description":"A human-readable explanation specific to this occurrence of the problem.",
                    "type":"string",
                    "example":"The Check provided is not valid."
                },
                "instance":{
                    "description":"A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.",
                    "type":"string",
                    "example":"error:check_validation_failure"
                },
                "posDetails":{
                    "description":"(Problem Details Extension) Contains a list of the problem details from the POS System processing the request.",
                    "type":"array",
                    "items":{
                        "type":"object",
                        "properties":{
                            "code":{
                                "description":"Short, unique identifier for the type of error",
                                "type":"string",
                                "example":"menu_item_invalid"
                            },
                            "message":{
                                "description":"A human-readable explanation specific to this occurrence of the problem.",
                                "type":"string",
                                "example":"invalid 'definitionSequence' value for menuItem '123'"
                            }
                        }
                    }
                }
            }
        },
        "organizations{orgShortName}":{
            "title":"Organization",
            "description":"An organization is the overarching organizational entity for a specific customer in Oracle Food and Beverage Cloud Products. An organization includes one or more locations.\n",
            "required":[
                "orgShortName",
                "name"
            ],
            "type":"object",
            "properties":{
                "orgShortName":{
                    "description":"The organization identifier.",
                    "example":"tfoinc",
                    "type":"string",
                    "minLength":1,
                    "maxLength":10,
                    "pattern":"[A-Za-z0-9]"
                },
                "name":{
                    "description":"The organization name.",
                    "example":"The Food Organization Inc",
                    "type":"string"
                }
            },
            "example":{
                "orgShortName":"tfoinc",
                "name":"The Food Organization Inc"
            }
        },
        "Organization":{
            "title":"Organization",
            "description":"An organization is the overarching organizational entity for a specific customer in Oracle Food and Beverage Cloud Products. An organization includes one or more locations.\n",
            "required":[
                "orgShortName",
                "name"
            ],
            "type":"object",
            "properties":{
                "orgShortName":{
                    "description":"The organization identifier.",
                    "example":"tfoinc",
                    "type":"string",
                    "minLength":1,
                    "maxLength":10,
                    "pattern":"[A-Za-z0-9]"
                },
                "name":{
                    "description":"Full name of the organization.",
                    "example":"The Food Organization Inc",
                    "type":"string"
                }
            },
            "example":{
                "orgShortName":"tfoinc",
                "name":"The Food Organization Inc"
            }
        },
        "distanceLocation":{
            "description":"A search results of locations.",
            "readOnly":true,
            "properties":{
                "distance":{
                    "type":"integer",
                    "description":"The distance in meters between the location and the point defined in the request."
                },
                "location":{
                    "type":"array",
                    "description":"Array of Location objects.",
                    "items":{
                        "$ref":"#/definitions/Location"
                    }
                }
            },
            "required":[
                "distance",
                "location"
            ]
        },
        "Location":{
            "title":"Location",
            "description":"A location represents the places of business within a customer's organization. A location can have one or more revenue centers.\n",
            "required":[
                "orgShortName",
                "locRef",
                "platform"
            ],
            "type":"object",
            "properties":{
                "orgShortName":{
                    "description":"The organization identifier.",
                    "type":"string"
                },
                "locRef":{
                    "description":"The location identifier.",
                    "example":"fdmnh144",
                    "type":"string"
                },
                "name":{
                    "description":"The location name.",
                    "example":"Fred Dome Stadium",
                    "type":"string"
                },
                "currency":{
                    "description":"The currency of the location. Pricing displayed on menus from the location are in this currency, and all check operations are in this currency. Currency is presented in \n",
                    "example":"EUR",
                    "type":"string"
                },
                "languages":{
                    "description":"Array of language culture reference strings configured for the location. First language listed is the default used if a request is made for an undefined language\n",
                    "example":[
                        "en-GB",
                        "fr-FR",
                        "de-DE"
                    ],
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "timezone":{
                    "$ref":"#/definitions/Timezone"
                },
                "phoneNumber":{
                    "$ref":"#/definitions/PhoneNumber"
                },
                "address":{
                    "$ref":"#/definitions/PostalAddress"
                },
                "geoLocation":{
                    "$ref":"#/definitions/GeoLocation"
                },
                "posPlatform":{
                    "$ref":"#/definitions/PosPlatform"
                },
                "extensions":{
                    "$ref":"#/definitions/ExtensionData"
                },
                "notes":{
                    "description":"additional details",
                    "type":"string"
                },
                "consumerName":{
                    "description":"consumer facing name",
                    "type":"string"
                }
            },
            "example":{
                "orgShortName":"tfoinc",
                "locRef":"fdmnh144",
                "name":"Fred Dome Stadium",
                "currency":"USD",
                "languages":[
                    "en-GB",
                    "fr-FR",
                    "de-DE"
                ],
                "timezone":{
                    "ianaName":"Europe/London",
                    "windowsName":"GMT Standard Time",
                    "tzIndex":85
                },
                "address":{
                    "addressLine1":"144 W 94th St",
                    "addressLine2":"Suite 11F",
                    "floor":"42A",
                    "locality":"New York",
                    "region":"NY",
                    "postalCode":"10019",
                    "country":"USA",
                    "notes":"West Entrance"
                },
                "phoneNumber":"(0030) 0456 343 234",
                "geoLocation":{
                    "latitude":40.773188,
                    "longitude":-73.994835
                },
                "posPlatform":{
                    "name":"Oracle.Simphony",
                    "version":"19.2.0.1234"
                }
            }
        },
        "distanceRevenueCenter":{
            "description":"A search results of revenue centers.",
            "readOnly":true,
            "properties":{
                "distance":{
                    "type":"integer",
                    "description":"The distance in meters between the location and the point defined in the request."
                },
                "revenueCenter":{
                    "type":"array",
                    "description":"Array of revenueCenter objects.",
                    "items":{
                        "$ref":"#/definitions/RevenueCenter"
                    }
                }
            },
            "required":[
                "distance",
                "revenueCenter"
            ]
        },
        "RevenueCenter":{
            "title":"Revenue Center",
            "description":"A revenue center represents the organizational entity that produces and sells items and services.\n",
            "required":[
                "orgShortName",
                "locRef",
                "rvcRef",
                "name"
            ],
            "type":"object",
            "properties":{
                "orgShortName":{
                    "description":"The organization identifier.",
                    "type":"string"
                },
                "locRef":{
                    "description":"The location identifier.",
                    "type":"string"
                },
                "rvcRef":{
                    "description":"Revenue Center Identifier",
                    "example":5234,
                    "type":"integer"
                },
                "name":{
                    "description":"Revenue Center Name",
                    "example":"Bar",
                    "type":"string"
                },
                "orderTypes":{
                    "description":"Array of order types that are available at this revenue center.\n",
                    "example":[
                        {
                            "orderTypeRef":1,
                            "name":"Eat In"
                        },
                        {
                            "orderTypeRef":2,
                            "name":"Take Out"
                        }
                    ],
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/OrderType"
                    }
                },
                "tables":{
                    "description":"Array of restaurant table identifiers.",
                    "example":[
                        "1",
                        "2",
                        "3",
                        "B1",
                        "B2"
                    ],
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "consumerName":{
                    "description":"consumer facing name",
                    "type":"string"
                },
                "address":{
                    "$ref":"#/definitions/PostalAddress"
                },
                "geoLocation":{
                    "$ref":"#/definitions/GeoLocation"
                },
                "extensions":{
                    "$ref":"#/definitions/ExtensionData"
                },
                "phoneNumber":{
                    "$ref":"#/definitions/PhoneNumber"
                }
            },
            "example":{
                "orgShortName":"tfoinc",
                "locRef":"fdmnh144",
                "rvcRef":5234,
                "name":"Bar",
                "orderTypes":[
                    {
                        "orderTypeRef":1,
                        "name":"Eat In"
                    },
                    {
                        "orderTypeRef":2,
                        "name":"Take Out"
                    }
                ],
                "tables":[
                    "1",
                    "2",
                    "3",
                    "B1",
                    "B2"
                ],
                "address":{
                    "addressLine1":"144 W 94th St",
                    "addressLine2":"Suite 11F",
                    "floor":"42A",
                    "locality":"New York",
                    "region":"NY",
                    "postalCode":"10019",
                    "country":"USA",
                    "notes":"West Entrance"
                },
                "phoneNumber":"2741022334",
                "geoLocation":{
                    "latitude":40.763188,
                    "longitude":-73.914835
                }
            }
        },
        "GeoLocation":{
            "type":"object",
            "description":"Coordinate of a location",
            "properties":{
                "latitude":{
                    "description":"WGS84 latitude, in degrees",
                    "type":"number",
                    "minimum":-90,
                    "maximum":90
                },
                "longitude":{
                    "description":"WGS84 Longitude, in degrees",
                    "type":"number",
                    "minimum":-180,
                    "maximum":180
                }
            }
        },
        "OrderType":{
            "type":"object",
            "description":"Defines an order type. The Order Type is used by the POS to define the workflow of\nan order, e.g., Dine-In vs Take-Out.\n",
            "example":{
                "orderTypeRef":1,
                "name":"Eat In"
            },
            "properties":{
                "orderTypeRef":{
                    "description":"Order Type Identifier",
                    "type":"number",
                    "minimum":1
                },
                "name":{
                    "description":"The name of the order type.",
                    "type":"string"
                }
            }
        },
        "PosPlatform":{
            "description":"Identifies the POS Platform running at the location.",
            "type":"object",
            "required":[
                "name",
                "version"
            ],
            "properties":{
                "name":{
                    "description":"Name of the platform",
                    "type":"string"
                },
                "version":{
                    "description":"Version of the platform",
                    "type":"string"
                }
            }
        },
        "PostalAddress":{
            "description":"Represents a postal address",
            "type":"object",
            "properties":{
                "addressLine1":{
                    "description":"First line of an address",
                    "type":"string"
                },
                "addressLine2":{
                    "description":"Second line of an address",
                    "type":"string"
                },
                "addressLine3":{
                    "description":"Third line of an address",
                    "type":"string"
                },
                "floor":{
                    "description":"The floor in a building.",
                    "type":"string"
                },
                "locality":{
                    "description":"city/town/village",
                    "type":"string"
                },
                "region":{
                    "description":"state/county/province",
                    "type":"string"
                },
                "postalcode":{
                    "description":"postal code, e.g. ZIP in the US",
                    "type":"string"
                },
                "country":{
                    "description":"name of country, or country code",
                    "type":"string"
                },
                "notes":{
                    "description":"Additional address details",
                    "type":"string"
                }
            }
        },
        "ExtensionData":{
            "description":"Container for extension data",
            "additionalProperties":{
                "type":"object"
            }
        },
        "PhoneNumber":{
            "description":"Associated phone number",
            "type":"string",
            "example":"027410-22583"
        },
        "Timezone":{
            "description":"Represents the associated timezone",
            "type":"object",
            "required":[
                "tzIndex"
            ],
            "properties":{
                "ianaName":{
                    "description":"Name in linux OS system",
                    "type":"string"
                },
                "windowsName":{
                    "description":"Name in windows OS system",
                    "type":"string"
                },
                "tzIndex":{
                    "description":"The integer representation of the Index column from https://support.microsoft.com/en-us/help/973627/microsoft-time-zone-index-values",
                    "type":"integer"
                }
            }
        },
        "organizations":{
            "description":"A collection of Organizations",
            "readOnly":true,
            "properties":{
                "limit":{
                    "type":"integer",
                    "description":"The limit used for the current page."
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset of the start of the current page in the collection."
                },
                "count":{
                    "type":"integer",
                    "description":"Total number of items in the collection for all pages."
                },
                "organization":{
                    "type":"array",
                    "description":"Array of Organization JSON objects. If there are no organizations configured, this array will be empty.",
                    "items":{
                        "$ref":"#/definitions/Organization"
                    }
                }
            },
            "required":[
                "organization"
            ]
        },
        "organizations{orgShortName}locations":{
            "description":"A collection of locations",
            "readOnly":true,
            "properties":{
                "limit":{
                    "type":"integer",
                    "description":"The limit used for the current page"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset of the start of the current page in the collection"
                },
                "count":{
                    "type":"integer",
                    "description":"Total number of items in the collection for all pages"
                },
                "location":{
                    "type":"array",
                    "description":"A collection of Locations",
                    "items":{
                        "$ref":"#/definitions/Location"
                    }
                }
            },
            "required":[
                "location"
            ]
        },
        "organizations{orgShortName}locations{locRef}revenueCenters":{
            "description":"A collection of Revenue Centers",
            "readOnly":true,
            "properties":{
                "limit":{
                    "type":"integer",
                    "description":"The limit used for the current page"
                },
                "offset":{
                    "type":"integer",
                    "description":"The offset of the start of the current page in the collection"
                },
                "count":{
                    "type":"integer",
                    "description":"Total number of items in the collection for all pages"
                },
                "revenueCenter":{
                    "type":"array",
                    "description":"A collection of Revenue Centers",
                    "items":{
                        "$ref":"#/definitions/RevenueCenter"
                    }
                }
            },
            "required":[
                "revenueCenter"
            ]
        },
        "OrganizationApiProblemDetails":{
            "description":"Problem details is used as standard model for reporting details when HTTP error status code is returned. This definition is defined by [RFC7807](https://tools.ietf.org/html/rfc7807). \n",
            "type":"object",
            "example":{
                "type":"error:validation",
                "title":"Required value not specified.",
                "details":"The OrgShortName value is required.",
                "instance":"required_value_missing"
            },
            "properties":{
                "type":{
                    "description":"A URI reference [RFC3986](https://tools.ietf.org/html/rfc3986) that identifies the problem type. When this member is not present, its value is assumed to be \"about:blank\".",
                    "type":"string"
                },
                "title":{
                    "description":"A short, human-readable summary of the problem type.",
                    "type":"string"
                },
                "details":{
                    "description":"A human-readable explanation specific to this occurrence of the problem.",
                    "type":"string"
                },
                "instance":{
                    "description":"A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.",
                    "type":"string"
                }
            }
        },
        "EmployeeView":{
            "description":"A view of an employee for integrators.",
            "type":"object",
            "required":[
                "employeeNumber"
            ],
            "properties":{
                "employeeNumber":{
                    "description":"Employee number.",
                    "type":"integer",
                    "format":"int32",
                    "minimum":1,
                    "example":42
                }
            }
        },
        "EmployeesApiProblemDetails":{
            "description":"Problem details is used as standard model for reporting details when HTTP error status code is returned. This definition is defined by [RFC7807](https://tools.ietf.org/html/rfc7807).\n\nThe content type for this response is `application/problem+json`\n",
            "type":"object",
            "example":{
                "type":"error:validation",
                "title":"Required value not specified.",
                "details":"The OrgShortName value is required.",
                "instance":"required_value_missing"
            },
            "properties":{
                "type":{
                    "description":"A URI reference that identifies the problem type. When this member is not present, its value is assumed to be \"about:blank\".",
                    "type":"string",
                    "example":"error:validation"
                },
                "title":{
                    "description":"A short, human-readable summary of the problem type.",
                    "type":"string",
                    "example":"Required value not specified."
                },
                "details":{
                    "description":"A human-readable explanation specific to this occurrence of the problem.",
                    "type":"string",
                    "example":"The OrgShortName value is required."
                },
                "instance":{
                    "description":"A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.",
                    "type":"string",
                    "example":"required_value_missing"
                }
            }
        },
        "Subscriber":{
            "description":"A subscriber",
            "type":"object",
            "required":[
                "subscriberId",
                "keyId",
                "hmacKey",
                "keyType"
            ],
            "properties":{
                "subscriberId":{
                    "description":"The subscriberID identifies uniquely the subscriber , practically matches its AUTHZ_CLIENTID value",
                    "type":"string"
                },
                "keyId":{
                    "description":"Identifier(GUID)",
                    "type":"string"
                },
                "hHmacKey":{
                    "description":"hmac",
                    "type":"string"
                },
                "keyType":{
                    "description":"Currently the only allowed value is \"hmac-sha256\"",
                    "type":"string"
                }
            }
        },
        "SubscriberSecretView":{
            "description":"A subscriber subset excluding subscriberId",
            "type":"object",
            "required":[
                "keyId",
                "hmacKey",
                "keyType"
            ],
            "properties":{
                "keyId":{
                    "description":"Identifier(GUID)",
                    "type":"string"
                },
                "hmacKey":{
                    "description":"HMACSHA256 key. Min 32bytes encoded as Base64 string.",
                    "type":"string"
                },
                "keyType":{
                    "description":"Currently the only allowed value is \"hmac-sha256\"",
                    "type":"string"
                }
            }
        },
        "Subscription":{
            "description":"A Subscription",
            "type":"object",
            "required":[
                "subscriptionId",
                "callbackUri",
                "messageType",
                "postOfficeOptions",
                "orgShortName"
            ],
            "properties":{
                "subscriptionId":{
                    "description":"Identifier(GUID) of this subscription.",
                    "type":"string"
                },
                "callbackUri":{
                    "description":"Callback Uri for the subscription's notifications.",
                    "type":"string"
                },
                "messageType":{
                    "$ref":"#/definitions/MessageType"
                },
                "postOfficeOptions":{
                    "$ref":"#/definitions/PostOfficeOptions"
                },
                "orgShortName":{
                    "description":"The organization identifier for this subscription.",
                    "type":"string"
                },
                "locRef":{
                    "description":"The location identifier for this subscription.",
                    "type":"string"
                },
                "rvcRef":{
                    "description":"The revenue center identifier for this subscription.",
                    "type":"string"
                }
            }
        },
        "SubscriptionViewModel":{
            "description":"A Subscription subset with the exclusions of subscriptionId and subscriberId",
            "type":"object",
            "required":[
                "callbackUri",
                "messageType",
                "postOfficeOptions",
                "orgShortName"
            ],
            "properties":{
                "callbackUri":{
                    "description":"Callback Uri for the subscription's notifications.",
                    "type":"string"
                },
                "messageType":{
                    "$ref":"#/definitions/MessageType"
                },
                "postOfficeOptions":{
                    "$ref":"#/definitions/PostOfficeOptions"
                },
                "orgShortName":{
                    "description":"The organization identifier for this subscription.",
                    "type":"string"
                },
                "locRef":{
                    "description":"The location identifier for this subscription.",
                    "type":"string"
                },
                "rvcRef":{
                    "description":"The revenue center identifier for this subscription.",
                    "type":"string"
                }
            }
        },
        "PostOfficeOptions":{
            "description":"Information about the PostOffice for the subscription",
            "type":"object",
            "properties":{
                "PostOfficeType":{
                    "description":"Information about the PostOffice for the subscription\nValid values are\n \"PushOnePostOffice\"\n",
                    "type":"string"
                }
            }
        },
        "MessageType":{
            "description":"Information about the type of message.",
            "type":"object",
            "required":[
                "id"
            ],
            "properties":{
                "id":{
                    "description":"Identifier of the message type [Source - POS] \"CheckNotification\", \"OrganizationsNotification\", \"ConfigurationNotification\" supports organization, property, and revenue center hierarchy level subscriptions.\n\"EmployeesNotification\" supports organization, and property hierarchy level subscriptions.\n",
                    "type":"string",
                    "example":{
                        "id":"CheckNotification"
                    }
                }
            }
        },
        "NotificationsApiProblemDetails":{
            "description":"Problem details is used as standard model for reporting details when HTTP error status code is returned. This definition is defined by [RFC7807](https://tools.ietf.org/html/rfc7807).\n\nThe content type for this response is `application/problem+json`\n",
            "type":"object",
            "example":{
                "type":"error:validation",
                "title":"Required value not specified.",
                "details":"The OrgShortName value is required.",
                "instance":"required_value_missing"
            },
            "properties":{
                "type":{
                    "description":"A URI reference that identifies the problem type. When this member is not present, its value is assumed to be \"about:blank\".",
                    "type":"string",
                    "example":"error:validation"
                },
                "title":{
                    "description":"A short, human-readable summary of the problem type.",
                    "type":"string",
                    "example":"Required value not specified."
                },
                "details":{
                    "description":"A human-readable explanation specific to this occurrence of the problem.",
                    "type":"string",
                    "example":"The OrgShortName value is required."
                },
                "instance":{
                    "description":"A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.",
                    "type":"string",
                    "example":"required_value_missing"
                }
            }
        },
        "MenuSummary":{
            "description":"Summary details of a menu without its related items.\n",
            "type":"object",
            "properties":{
                "MenuSummaryProperties":{
                    "$ref":"#/definitions/MenuSummaryProperties"
                }
            }
        },
        "Menu":{
            "description":"The set of items that can be ordered. In addition to the menu's summary details the menu includes the menu items, prices, and related information necessary to order those items.\n",
            "type":"object",
            "properties":{
                "MenuSummaryProperties":{
                    "$ref":"#/definitions/MenuSummaryProperties"
                },
                "menuItems":{
                    "description":"Array of menu items.",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/MenuItem"
                    }
                },
                "comboMeals":{
                    "description":"Array of combo meals.",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ComboMealItem"
                    }
                },
                "condimentItems":{
                    "description":"Array of condiment items.",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/CondimentItem"
                    }
                },
                "condimentGroups":{
                    "description":"Array of contiment groups.",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/CondimentGroup"
                    }
                },
                "familyGroups":{
                    "description":"Array of family groups.",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/FamilyGroupItem"
                    }
                },
                "allergens":{
                    "description":"Array of allergens.",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/Allergen"
                    }
                }
            }
        },
        "DiscountItem":{
            "description":"Definition of a discount that can be applied to a transaction.\n",
            "type":"object",
            "required":[
                "discountId",
                "type"
            ],
            "properties":{
                "discountId":{
                    "description":"Discount identifier",
                    "type":"integer",
                    "example":13
                },
                "name":{
                    "$ref":"#/definitions/TranslatedString"
                },
                "type":{
                    "description":"Discount type",
                    "type":"string",
                    "enum":[
                        "amount",
                        "percentage"
                    ],
                    "example":"amount"
                },
                "value":{
                    "description":"The amount or percentage of the discount. If value is not present or is zero, then the value must be provided when the discount is added to a check.\n",
                    "type":"number",
                    "example":5
                },
                "ConsumerContentProperties":{
                    "$ref":"#/definitions/ConsumerContentProperties"
                },
                "extensions":{
                    "$ref":"#/definitions/ExtensionData"
                }
            }
        },
        "DiscountCollection":{
            "description":"Definition of a discount that can be applied to a transaction.\n",
            "type":"object",
            "properties":{
                "OrgLocRvcProperties":{
                    "$ref":"#/definitions/OrgLocRvcProperties"
                },
                "items":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/DiscountItem"
                    }
                }
            }
        },
        "ServiceChargeItem":{
            "description":"Definition of a service charge that can be applied to a transaction.\n",
            "type":"object",
            "required":[
                "serviceChargeId",
                "type"
            ],
            "properties":{
                "serviceChargeId":{
                    "description":"Service Charge Identifier",
                    "type":"integer"
                },
                "name":{
                    "description":"Service Charge Name",
                    "type":"string"
                },
                "type":{
                    "description":"Service Charge Type",
                    "type":"string",
                    "enum":[
                        "amount",
                        "percentage"
                    ],
                    "example":"amount"
                },
                "value":{
                    "description":"The amount or percentage of the service charge. If value is not present or is zero, then the value must be provided when the service charge is added to a check.\n",
                    "type":"number",
                    "example":5
                },
                "ConsumerContentProperties":{
                    "$ref":"#/definitions/ConsumerContentProperties"
                },
                "extensions":{
                    "$ref":"#/definitions/ExtensionData"
                }
            }
        },
        "ServiceChargeCollection":{
            "description":"Definition of a service chargeount that can be applied to a transaction.\n",
            "type":"object",
            "properties":{
                "OrgLocRvcProperties":{
                    "$ref":"#/definitions/OrgLocRvcProperties"
                },
                "items":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ServiceChargeItem"
                    }
                }
            }
        },
        "TenderItem":{
            "description":"Definition of a tender that can be applied to a transaction. A tender can be either a 'service total' or a 'payment'. A 'service total' is used to submit an order without payment.\n",
            "type":"object",
            "required":[
                "tenderId",
                "type"
            ],
            "properties":{
                "tenderId":{
                    "description":"Tender Identifier",
                    "type":"integer"
                },
                "name":{
                    "description":"Tender Name",
                    "type":"string"
                },
                "type":{
                    "description":"Tender Type",
                    "type":"string",
                    "enum":[
                        "serviceTotal",
                        "payment"
                    ],
                    "example":"serviceTotal"
                },
                "ConsumerContentProperties":{
                    "$ref":"#/definitions/ConsumerContentProperties"
                },
                "extensions":{
                    "$ref":"#/definitions/ExtensionData"
                }
            }
        },
        "TenderCollection":{
            "description":"Definition of a tenders that can be applied to a transaction.\n",
            "type":"object",
            "properties":{
                "OrgLocRvcProperties":{
                    "$ref":"#/definitions/OrgLocRvcProperties"
                },
                "items":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/TenderItem"
                    }
                }
            }
        },
        "TaxDefinitions":{
            "description":"Tax definitions for a revenue center.\n",
            "type":"object",
            "properties":{
                "OrgLocRvcProperties":{
                    "$ref":"#/definitions/OrgLocRvcProperties"
                },
                "taxClasses":{
                    "description":"Array of tax clases.\n",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/TaxClassItem"
                    }
                },
                "taxRates":{
                    "description":"Array of tax rates.\n",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/TaxRateItem"
                    }
                }
            }
        },
        "MenuItemsUnavailable":{
            "description":"A collection of unavailable menu items.\n",
            "type":"object",
            "properties":{
                "OrgLocRvcProperties":{
                    "$ref":"#/definitions/OrgLocRvcProperties"
                },
                "items":{
                    "description":"Array of items.\n",
                    "type":"array",
                    "items":{
                        "properties":{
                            "menuItemId":{
                                "description":"Menu Item Identifier",
                                "type":"integer",
                                "example":32
                            },
                            "definitions":{
                                "description":"Array of definitions.\n",
                                "type":"array",
                                "items":{
                                    "properties":{
                                        "definitionSequence":{
                                            "description":"The number of the definition.\n",
                                            "type":"integer",
                                            "example":1
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "MenuItemAvailability":{
            "description":"A collection of unavailable menu items for update.\n",
            "type":"object",
            "required":[
                "miAvailibilityData"
            ],
            "properties":{
                "OrgLocRvcProperties":{
                    "$ref":"#/definitions/OrgLocRvcProperties"
                },
                "miAvailibilityData":{
                    "description":"Array of menu item availibility data.\n",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/MenuItemAvailabilityData"
                    }
                }
            }
        },
        "MenuItemAvailabilityData":{
            "description":"Availability data for a menu item.\n",
            "type":"object",
            "required":[
                "objectNumber",
                "definitionSeq"
            ],
            "properties":{
                "objectNumber":{
                    "description":"The menu item object identifier.\n",
                    "type":"integer"
                },
                "definitionSeq":{
                    "description":"The number of the definition.\n",
                    "type":"integer"
                }
            }
        },
        "MenuItem":{
            "description":"A Menu Item is an item that is ordered.\n",
            "required":[
                "name",
                "menuItemId",
                "familyGroupRef",
                "definitions"
            ],
            "type":"object",
            "properties":{
                "NamedObject":{
                    "$ref":"#/definitions/NamedObject"
                },
                "menuItemId":{
                    "description":"Menu Item Identifier",
                    "type":"integer",
                    "example":32
                },
                "familyGroupRef":{
                    "description":"Reference to a family group item in menu.familyGroups\n",
                    "type":"integer"
                },
                "definitions":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/MenuItemDefinition"
                    }
                },
                "dietaryInformation":{
                    "description":"Dietary information for this menu item",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "tags":{
                    "description":"Array of tags.\n",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "tagGroups":{
                    "description":"Array of tag groups.\n",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/TagGroup"
                    }
                }
            }
        },
        "MenuItemDefinition":{
            "description":"A menu item definition contains operational attributes of a menu item.\n",
            "required":[
                "definitionSequence",
                "name",
                "name2"
            ],
            "type":"object",
            "properties":{
                "definitionSequence":{
                    "description":"The number of the definition. This value is used when ordering the item.\n",
                    "type":"integer"
                },
                "NamedObject":{
                    "$ref":"#/definitions/NamedObject"
                },
                "name2":{
                    "$ref":"#/definitions/TranslatedString"
                },
                "slus":{
                    "description":"A collection of the screen-lookup groups for the item. This value is provided to group or filter items on a user interface.\n",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ScreenLookup"
                    }
                },
                "taxClassRef":{
                    "description":"Reference to tax class definition.\n",
                    "type":"integer"
                },
                "prices":{
                    "description":"Collection of prices that can be uses when ordering a menu item.\n",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/MenuItemPrice"
                    }
                },
                "defaultCondiments":{
                    "description":"The collection of condiments associated with the menu item by default.\n",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/DefaultCondiment"
                    }
                },
                "condimentGroupRules":{
                    "description":"Defines a set of condiment groups from which items are selected when adding an the menu item to a guest check.\n",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/CondimentGroupRule"
                    }
                },
                "ConsumerContentProperties":{
                    "$ref":"#/definitions/ConsumerContentProperties"
                },
                "consumerAdvisoryText":{
                    "$ref":"#/definitions/TranslatedString"
                },
                "allergens":{
                    "description":"List of identifiers that references allergens that apply to this menu item.\n",
                    "example":[
                        "milk",
                        "peanut"
                    ],
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "nutritionalData":{
                    "description":"A list of nutritional data for the menu item. It is assumed that nutritional items are defined where the serving size is one of the menu item.\n",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/NutritionalData"
                    }
                },
                "options":{
                    "description":"A list of option values. If present the corresponding option is set. Duplicates are ignored. (Note - Supported by Simphony version 19.2.1 or greater. Ignored for Simphony version 19.2.0.)\n",
                    "type":"array",
                    "items":{
                        "type":"string",
                        "enum":[
                            "containsAlcohol"
                        ]
                    }
                },
                "tags":{
                    "description":"List of tags that apply to this menu item.\n",
                    "example":[
                        "hot",
                        "cold"
                    ],
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "tagGroups":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/TagGroup"
                    }
                },
                "extensions":{
                    "$ref":"#/definitions/ExtensionData"
                }
            }
        },
        "MenuItemPrice":{
            "description":"Represents a price for a menu item.\n",
            "type":"object",
            "required":[
                "priceSequence",
                "price"
            ],
            "properties":{
                "priceSequence":{
                    "description":"The price sequence",
                    "type":"integer"
                },
                "price":{
                    "description":"The price that can be used when a adding the menu item to a check.\n",
                    "type":"number"
                },
                "name":{
                    "description":"Describes some facet of the price; an example might be a size.\n",
                    "type":"string"
                }
            }
        },
        "FamilyGroupItem":{
            "description":"Model for a Family Group",
            "type":"object",
            "required":[
                "familyGroupItemId"
            ],
            "properties":{
                "familyGroupItemId":{
                    "type":"integer"
                },
                "name":{
                    "$ref":"#/definitions/TranslatedString"
                },
                "consumerName":{
                    "$ref":"#/definitions/TranslatedString"
                },
                "consumerDescription":{
                    "$ref":"#/definitions/TranslatedString"
                },
                "images":{
                    "description":"Array of images.\n",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ImageLink"
                    }
                }
            }
        },
        "Allergen":{
            "description":"Model for an allergen",
            "type":"object",
            "required":[
                "allergenId"
            ],
            "properties":{
                "allergenId":{
                    "description":"Identifier for an allergen",
                    "type":"string"
                },
                "name":{
                    "$ref":"#/definitions/TranslatedString"
                }
            }
        },
        "DefaultCondiment":{
            "description":"Represents a default condiment for a menu item.\n",
            "type":"object",
            "required":[
                "condimentRef",
                "quantity"
            ],
            "properties":{
                "condimentRef":{
                    "description":"A reference to the condiment that is a default. This is `condimentId` of an item from the `menu.condimentItems` collection.\n",
                    "type":"integer"
                },
                "quantity":{
                    "description":"The quantity of condiment applied by default.\n",
                    "type":"integer",
                    "minimum":1
                }
            }
        },
        "CondimentGroupRule":{
            "description":"Represents a rule for condiment group that describes condiment selection rules used when adding an menu item to a check.\n",
            "type":"object",
            "required":[
                "condimentGroupRef"
            ],
            "properties":{
                "condimentGroupRef":{
                    "description":"Reference to an item in the `Menu.condimentGroups` collection.\n",
                    "type":"integer",
                    "example":5802109
                },
                "minimumCount":{
                    "description":"The minimum number of items to select from this group when adding the menu item to a check. A value of zero indicates no minimum and that selection of an item from this group is optional.\n",
                    "type":"integer",
                    "example":1
                },
                "maximumCount":{
                    "description":"The maximum number of items to select from this group when adding the menu item to a check. A value of zero indicates no maximum.\n",
                    "type":"integer",
                    "example":0
                }
            }
        },
        "CondimentItem":{
            "description":"A Condiment Item is an item used to provide information about how a menu item is prepared. Condiments may have prices that add to price of the item it modifies. Condiments may also have default condiments and its condiment modifications, e.g., a Steak with Salad option that has a dressing option.\n",
            "required":[
                "name",
                "condimentId",
                "familyGroupRef",
                "definitions"
            ],
            "type":"object",
            "properties":{
                "NamedObject":{
                    "$ref":"#/definitions/NamedObject"
                },
                "condimentId":{
                    "description":"Condiment Item Identifier",
                    "type":"integer",
                    "example":32
                },
                "familyGroupRef":{
                    "description":"Reference to a family group item in menu.familyGroups\n",
                    "type":"integer"
                },
                "definitions":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/CondimentItemDefinition"
                    }
                },
                "dietaryInformation":{
                    "description":"Dietary information for this condiment item\n",
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "tags":{
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "tagGroups":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/TagGroup"
                    }
                }
            }
        },
        "CondimentItemDefinition":{
            "description":"A condiment item definition contains operational attributes of a condiment item.\n",
            "required":[
                "number",
                "name",
                "name2"
            ],
            "type":"object",
            "properties":{
                "number":{
                    "description":"The number of the definition. This value is used when ordering the item.\n",
                    "type":"integer"
                },
                "NamedObject":{
                    "$ref":"#/definitions/NamedObject"
                },
                "name2":{
                    "$ref":"#/definitions/TranslatedString"
                },
                "slus":{
                    "description":"A collection of the screen-lookup groups for the item. This value is provided to group or filter items on a user interface.\n",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ScreenLookup"
                    }
                },
                "prices":{
                    "description":"Collection of prices that can be used when ordering a condiment item.\n",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/MenuItemPrice"
                    }
                },
                "ConsumerContentProperties":{
                    "$ref":"#/definitions/ConsumerContentProperties"
                },
                "allergens":{
                    "description":"List of identifiers that references allergens that apply to this condiment item.\n",
                    "example":[
                        "milk",
                        "peanut"
                    ],
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "nutritionalData":{
                    "description":"List of nutritional Data that apply to this condiment item.\n",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/NutritionalData"
                    }
                },
                "options":{
                    "description":"A list of option values. If present the corresponding option is set. Duplicates are ignored. (Note - Supported by Simphony version 19.2.1 or greater. Ignored for Simphony version 19.2.0.)\n",
                    "type":"array",
                    "items":{
                        "type":"string",
                        "enum":[
                            "containsAlcohol"
                        ]
                    }
                },
                "tags":{
                    "description":"List of tags that apply to this condiment item.\n",
                    "example":[
                        "hot",
                        "cold"
                    ],
                    "type":"array",
                    "items":{
                        "type":"string"
                    }
                },
                "tagGroups":{
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/TagGroup"
                    }
                },
                "extensions":{
                    "$ref":"#/definitions/ExtensionData"
                }
            }
        },
        "CondimentGroup":{
            "description":"A group that references one-or-more condiment items.\n",
            "type":"object",
            "required":[
                "condimentGroupId",
                "name",
                "condimentItemRefs"
            ],
            "properties":{
                "condimentGroupId":{
                    "description":"Condiment Group Identifier.\n",
                    "type":"integer",
                    "example":32
                },
                "name":{
                    "$ref":"#/definitions/TranslatedString"
                },
                "condimentItemRefs":{
                    "description":"An array of references to items in the `Menu.condimentItems` collection.\n",
                    "type":"array",
                    "items":{
                        "type":"integer"
                    }
                },
                "ConsumerContentProperties":{
                    "$ref":"#/definitions/ConsumerContentProperties"
                }
            }
        },
        "ComboMealItem":{
            "description":"A Combo Meal that can be ordered.\n",
            "type":"object",
            "required":[
                "comboMealId",
                "name",
                "menuItemRef",
                "comboGroups"
            ],
            "properties":{
                "comboMealId":{
                    "description":"The combo meal identifier.\n",
                    "type":"integer"
                },
                "name":{
                    "description":"Name of the combo meal item.\n",
                    "type":"string"
                },
                "menuItemRef":{
                    "description":"A reference to the main item used when ordering a combo meal.\n",
                    "type":"integer"
                },
                "comboGroups":{
                    "description":"Array of Combo Group items from which user will make selections to complete definition of the combo.\n",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ComboGroupItem"
                    }
                }
            }
        },
        "ComboGroupItem":{
            "description":"A Combo Group.\n",
            "type":"object",
            "required":[
                "comboGroupId",
                "name",
                "prices",
                "menuItems"
            ],
            "properties":{
                "comboGroupId":{
                    "description":"The combo group identifier.\n",
                    "type":"integer"
                },
                "name":{
                    "description":"The name of the combo group.\n",
                    "type":"string"
                },
                "count":{
                    "description":"The number of items to select from the group when adding the combo meal to a check.\n",
                    "type":"integer"
                },
                "isMainGroup":{
                    "description":"When true, indicates this group is the \"main group\". Options: true or false.\n",
                    "type":"boolean"
                },
                "prices":{
                    "description":"An array of zero or more prices for the combo menu item.\n",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ComboMenuItemPrice"
                    }
                },
                "menuItems":{
                    "description":"The collection of menu items that are selected when picking items from this combo group. Array of Combo Menu Items.\n",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ComboMenuItem"
                    }
                }
            }
        },
        "ComboMenuItem":{
            "description":"A menu item which is part of a combo meal.\n",
            "type":"object",
            "required":[
                "menuItemRef",
                "prices"
            ],
            "properties":{
                "menuItemRef":{
                    "description":"The identifier of the menu item that represents this side item.\n",
                    "type":"integer"
                },
                "count":{
                    "description":"The number of items to select from the group when adding the combo meal to a check.\n",
                    "type":"integer"
                },
                "prices":{
                    "description":"An array of zero or more prices for the combo menu item.\n",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ComboMenuItemPrice"
                    }
                }
            }
        },
        "ComboMenuItemPrice":{
            "description":"Combo menu item price is the amount charged for the sale of a combo menu item.\n",
            "type":"array",
            "required":[
                "priceSequence",
                "price"
            ],
            "properties":{
                "priceSequence":{
                    "description":"The price sequence number.\n",
                    "type":"integer"
                },
                "price":{
                    "description":"The price that can be used when a adding the menu item to a check.\n",
                    "type":"number"
                }
            }
        },
        "TaxClassItem":{
            "description":"Tax class defines a collection of active tax rates.\n",
            "type":"object",
            "required":[
                "taxClassId",
                "activeTaxRates"
            ],
            "properties":{
                "taxClassId":{
                    "description":"Tax class identifier.\n",
                    "type":"integer"
                },
                "activeTaxRateRefs":{
                    "description":"Set of references to active tax rate items for this tax class.\n",
                    "type":"array",
                    "items":{
                        "type":"integer"
                    }
                }
            }
        },
        "TaxRateItem":{
            "description":"Definition of a tax rate.\n",
            "type":"object",
            "required":[
                "taxRateId"
            ],
            "properties":{
                "taxRateId":{
                    "description":"Tax rate identifier. This is the Simphony tax rate index.\n",
                    "type":"integer"
                },
                "percentage":{
                    "description":"Tax rate percentage.\n",
                    "type":"number"
                },
                "taxType":{
                    "description":"The tax rate type. Valid values are \n- disabled\n- addonBreakpoint\n- addonPercent\n- includedPercent\n- surcharge\n",
                    "type":"string",
                    "enum":[
                        "disabled",
                        "addonBreakpoint",
                        "addonPercent",
                        "includedPercent",
                        "surcharge"
                    ],
                    "example":"addonBreakpoint"
                },
                "name":{
                    "$ref":"#/definitions/TranslatedString"
                },
                "repeatStartIndex":{
                    "description":"breakpoint start index",
                    "type":"integer"
                },
                "repeatEndIndex":{
                    "description":"breakpoint end index",
                    "type":"integer"
                },
                "startAmount":{
                    "description":"the breakpoint start amount",
                    "type":"number"
                },
                "breakpoints":{
                    "description":"breakpoint table",
                    "type":"array",
                    "items":{
                        "type":"integer"
                    }
                }
            }
        },
        "MenuSummaryProperties":{
            "type":"object",
            "required":[
                "menuId",
                "name"
            ],
            "properties":{
                "OrgLocRvcProperties":{
                    "$ref":"#/definitions/OrgLocRvcProperties"
                },
                "menuId":{
                    "description":"Menu Identifier",
                    "type":"string",
                    "example":"myb:store2:dining"
                },
                "name":{
                    "description":"Menu name",
                    "type":"string",
                    "example":"Bar Menu"
                },
                "description":{
                    "description":"A description of the menu",
                    "type":"string"
                }
            }
        },
        "OrgLocRvcProperties":{
            "description":"A collection of properties for orgShortName, locRef and rvcRef\n",
            "type":"object",
            "required":[
                "orgShortName",
                "locRef",
                "rvcRef"
            ],
            "properties":{
                "orgShortName":{
                    "description":"Organization identifier",
                    "type":"string",
                    "example":"mymeal"
                },
                "locRef":{
                    "description":"Location identifier",
                    "type":"string",
                    "example":"store66"
                },
                "rvcRef":{
                    "description":"Revenue Center identifier",
                    "type":"integer",
                    "example":2
                }
            }
        },
        "ConsumerContentProperties":{
            "description":"A collection of consumer based content\n",
            "type":"object",
            "properties":{
                "consumerName":{
                    "$ref":"#/definitions/TranslatedString"
                },
                "consumerDescription":{
                    "$ref":"#/definitions/TranslatedString"
                },
                "images":{
                    "description":"Array of images.\n",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ImageLink"
                    }
                }
            }
        },
        "ImageLink":{
            "description":"Represents a link to an image",
            "type":"object",
            "required":[
                "url",
                "tags"
            ],
            "properties":{
                "index":{
                    "description":"Unique identifier for the image",
                    "type":"string"
                },
                "url":{
                    "description":"URL for the image.\n",
                    "type":"string",
                    "example":"https://oracleObjectStore.com/images/coffee822815.jpg"
                },
                "altText":{
                    "description":"Alt text for the image",
                    "type":"string",
                    "example":"pizza"
                },
                "description":{
                    "description":"Description text for the image",
                    "type":"string"
                },
                "isCloudImage":{
                    "type":"boolean"
                },
                "size":{
                    "description":"Image size",
                    "type":"string"
                }
            }
        },
        "TranslatedString":{
            "description":"A string that contains translations into multiple languages\nExample:n`{ \"en-US\": \"coffee\", \"de-DE\": \"kaffee\"}`\n",
            "type":"object",
            "example":{
                "en-US":"Coffee",
                "de-DE":"Kaffee"
            },
            "additionalProperties":{
                "type":"string"
            }
        },
        "NamedObject":{
            "type":"object",
            "properties":{
                "name":{
                    "$ref":"#/definitions/TranslatedString"
                }
            }
        },
        "NutritionalData":{
            "description":"Nutritional data for a menu item. It is assumed that nutritional items are defined where the serving size is one of the menu item.\n",
            "type":"object",
            "properties":{
                "nutritionalItemId":{
                    "description":"Identifier for the nutritional item",
                    "type":"string",
                    "example":"fat, sodium"
                },
                "value":{
                    "description":"The amount of the nutritional item associated with the menu item.\n",
                    "type":"number",
                    "example":475
                },
                "unitOfMeasure":{
                    "description":"unit of measure for the nutritional item",
                    "type":"string",
                    "example":"grams, milligrams, calorie"
                },
                "name":{
                    "$ref":"#/definitions/TranslatedString"
                }
            }
        },
        "ScreenLookup":{
            "description":"Information about a Screen Lookup (SLU)",
            "type":"object",
            "required":[
                "sluNumber",
                "sluId"
            ],
            "properties":{
                "sluNumber":{
                    "description":"Represents the SLUn property name of the POS menu item definition. SLU2 is sluNumber = 2, SLU8 is sluNumber = 8 etc. SLU is sluNumber = 1.\n",
                    "type":"integer"
                },
                "sluId":{
                    "description":"The identifier (SluIndex) of the SLU",
                    "type":"integer"
                },
                "name":{
                    "$ref":"#/definitions/TranslatedString"
                },
                "images":{
                    "description":"Array of images.\n",
                    "type":"array",
                    "items":{
                        "$ref":"#/definitions/ImageLink"
                    }
                }
            }
        },
        "TagGroup":{
            "description":"A group of tags",
            "type":"object",
            "required":[
                "id",
                "tags"
            ],
            "properties":{
                "id":{
                    "description":"Unique identifier for the tag group",
                    "type":"string"
                },
                "tags":{
                    "description":"The tags in this tag group, can be empty",
                    "type":"array",
                    "items":{
                        "type":"string"
                    },
                    "example":[
                        "spicy",
                        "lo-carb"
                    ]
                }
            }
        },
        "BarcodeCollection":{
            "description":"A collection of BarcodeItems for a revenue center",
            "type":"object",
            "properties":{
                "OrgLocRvcProperties":{
                    "$ref":"#/definitions/OrgLocRvcProperties"
                },
                "BarcodeItem":{
                    "type":"object",
                    "properties":{
                        "items":{
                            "type":"array",
                            "items":{
                                "$ref":"#/definitions/BarcodeItem"
                            }
                        }
                    }
                }
            }
        },
        "BarcodeItem":{
            "description":"Definition of a Barcode object",
            "type":"object",
            "required":[
                "barcodeId",
                "barcode",
                "menuItemId"
            ],
            "properties":{
                "barcodeId":{
                    "description":"Identifier for the barcode item",
                    "type":"integer",
                    "format":"int32",
                    "minimum":1
                },
                "barcode":{
                    "description":"The value of the barcode",
                    "type":"string",
                    "pattern":"^[0-9]+$",
                    "minLength":1,
                    "maxLength":8192,
                    "example":"000123456890"
                },
                "menuItemId":{
                    "description":"The menu item identifier for the barcode",
                    "type":"integer",
                    "format":"int32",
                    "minimum":1,
                    "example":32
                },
                "definitionSequence":{
                    "description":"The menu item definition identifier for the barcode",
                    "type":"integer",
                    "format":"int32",
                    "minimum":1
                },
                "price":{
                    "description":"The alternate price for the barcode<br>If<br>minimum: 0<br>exclusiveMinimum: true<br>This means that the allowed values excludes the value of minimum, 0. So 0.000001 would be valid, but 0 would not.<br>If exclusiveMinimum: false then 0 and 0.000001 would be valid.<br>Zero price, preparationCost, definitionSequence or priceSequence are not allowed.",
                    "type":"number",
                    "format":"float",
                    "minimum":0,
                    "exclusiveMinimum":true
                },
                "priceSequence":{
                    "description":"The price sequence for the barcode",
                    "type":"integer",
                    "format":"int32",
                    "minimum":1
                },
                "preparationCost":{
                    "description":"The alternate preparation cost for the barcode<br>If<br>minimum: 0<br>exclusiveMinimum: true<br>This means that the allowed values excludes the value of minimum, 0. So 0.000001 would be valid, but 0 would not.<br>If exclusiveMinimum: false then 0 and 0.000001 would be valid.<br>Zero price, preparationCost, definitionSequence or priceSequence are not allowed.",
                    "type":"number",
                    "format":"float",
                    "minimum":0,
                    "exclusiveMinimum":true
                }
            }
        },
        "ConfigurationApiProblemDetails":{
            "description":"Problem details is used as standard model for reporting details when HTTP error status code is returned. This definition is defined by [RFC7807](https://tools.ietf.org/html/rfc7807).\n\nThe content type for this response is `application/problem+json`\n",
            "type":"object",
            "example":{
                "type":"error:validation",
                "title":"Required value not specified.",
                "details":"The OrgShortName value is required.",
                "instance":"required_value_missing"
            },
            "properties":{
                "type":{
                    "description":"A URI reference that identifies the problem type. When this member is not present, its value is assumed to be \"about:blank\".\n",
                    "type":"string",
                    "example":"error:validation"
                },
                "title":{
                    "description":"A short, human-readable summary of the problem type.\n",
                    "type":"string",
                    "example":"Required value not specified.\n"
                },
                "details":{
                    "description":"A human-readable explanation specific to this occurrence of the problem.\n",
                    "type":"string",
                    "example":"The OrgShortName value is required.\n"
                },
                "instance":{
                    "description":"A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.\n",
                    "type":"string",
                    "example":"required_value_missing"
                }
            }
        }
    },
    "responses":{
        "Created":{
            "description":"201 Created"
        },
        "NoContent":{
            "description":"204 No Content"
        },
        "NotModified":{
            "description":"304 Not Modified"
        },
        "CheckBadRequest":{
            "description":"400 Bad Request",
            "schema":{
                "$ref":"#/definitions/ChecksApiProblemDetails"
            }
        },
        "Unauthorized":{
            "description":"401 Unauthorized"
        },
        "Forbidden":{
            "description":"403 Forbidden"
        },
        "NotFound":{
            "description":"404 Requested resource not found"
        },
        "ServiceTimeout":{
            "description":"521 Service Timeout"
        },
        "Updated":{
            "description":"200 OK",
            "headers":{
                "Content-Location":{
                    "description":"URL for resource that was created",
                    "type":"string",
                    "format":"url"
                }
            }
        },
        "OrganizationApiBadRequest":{
            "description":"400 Bad Request",
            "schema":{
                "$ref":"#/definitions/OrganizationApiProblemDetails"
            }
        },
        "NotImplemented":{
            "description":"501 Not Implemented"
        },
        "OkUpdated":{
            "description":"200 OK",
            "headers":{
                "Content-Location":{
                    "description":"URL for resource that was created",
                    "type":"string",
                    "format":"url"
                }
            }
        },
        "EmployeesApiBadRequest":{
            "description":"400 Bad Request",
            "schema":{
                "$ref":"#/definitions/EmployeesApiProblemDetails"
            }
        },
        "NotificationsApiBadRequest":{
            "description":"400 Bad Request",
            "schema":{
                "$ref":"#/definitions/NotificationsApiProblemDetails"
            }
        },
        "ConfigurationApiBadRequest":{
            "description":"400 Bad Request",
            "schema":{
                "$ref":"#/definitions/ConfigurationApiProblemDetails"
            }
        }
    }
}
